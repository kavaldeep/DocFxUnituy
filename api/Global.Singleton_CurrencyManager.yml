### YamlMime:ManagedReference
items:
- uid: Global.Singleton_CurrencyManager
  commentId: T:Global.Singleton_CurrencyManager
  id: Singleton_CurrencyManager
  parent: Global
  children:
  - Global.Singleton_CurrencyManager.Awake
  - Global.Singleton_CurrencyManager.goalhardCurrency
  - Global.Singleton_CurrencyManager.goalrewardCurrency
  - Global.Singleton_CurrencyManager.goalsoftCurrency
  - Global.Singleton_CurrencyManager.hardCurrency
  - Global.Singleton_CurrencyManager.rewardCurrency
  - Global.Singleton_CurrencyManager.softCurrency
  - Global.Singleton_CurrencyManager.textsToChangeHardCurrency
  - Global.Singleton_CurrencyManager.textsToChangeRewardCurrency
  - Global.Singleton_CurrencyManager.textsToChangeSoftCurrency
  - Global.Singleton_CurrencyManager.UpdateCurrencyTexts(System.String)
  langs:
  - csharp
  - vb
  name: Singleton_CurrencyManager
  nameWithType: Singleton_CurrencyManager
  fullName: Singleton_CurrencyManager
  type: Class
  source:
    id: Singleton_CurrencyManager
    path: ''
    startLine: 14606
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: 'public class Singleton_CurrencyManager : Singleton<Singleton_CurrencyManager>'
    content.vb: >-
      Public Class Singleton_CurrencyManager
          Inherits Singleton(Of Singleton_CurrencyManager)
  inheritance:
  - System.Object
  - Global.Singleton{Singleton_CurrencyManager}
  inheritedMembers:
  - Global.Singleton{Singleton_CurrencyManager}.Instance
  - Global.Singleton{Singleton_CurrencyManager}.StartCoroutine(System.Collections.IEnumerator)
  - Global.Singleton{Singleton_CurrencyManager}.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  - Global.Singleton{Singleton_CurrencyManager}.Start
  - Global.Singleton{Singleton_CurrencyManager}.Update
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.Singleton_CurrencyManager.hardCurrency
  commentId: F:Global.Singleton_CurrencyManager.hardCurrency
  id: hardCurrency
  parent: Global.Singleton_CurrencyManager
  langs:
  - csharp
  - vb
  name: hardCurrency
  nameWithType: Singleton_CurrencyManager.hardCurrency
  fullName: Singleton_CurrencyManager.hardCurrency
  type: Field
  source:
    id: hardCurrency
    path: ''
    startLine: 14609
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public int hardCurrency
    return:
      type: System.Int32
    content.vb: Public hardCurrency As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_CurrencyManager.softCurrency
  commentId: F:Global.Singleton_CurrencyManager.softCurrency
  id: softCurrency
  parent: Global.Singleton_CurrencyManager
  langs:
  - csharp
  - vb
  name: softCurrency
  nameWithType: Singleton_CurrencyManager.softCurrency
  fullName: Singleton_CurrencyManager.softCurrency
  type: Field
  source:
    id: softCurrency
    path: ''
    startLine: 14611
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public int softCurrency
    return:
      type: System.Int32
    content.vb: Public softCurrency As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_CurrencyManager.rewardCurrency
  commentId: F:Global.Singleton_CurrencyManager.rewardCurrency
  id: rewardCurrency
  parent: Global.Singleton_CurrencyManager
  langs:
  - csharp
  - vb
  name: rewardCurrency
  nameWithType: Singleton_CurrencyManager.rewardCurrency
  fullName: Singleton_CurrencyManager.rewardCurrency
  type: Field
  source:
    id: rewardCurrency
    path: ''
    startLine: 14613
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public int rewardCurrency
    return:
      type: System.Int32
    content.vb: Public rewardCurrency As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_CurrencyManager.goalhardCurrency
  commentId: F:Global.Singleton_CurrencyManager.goalhardCurrency
  id: goalhardCurrency
  parent: Global.Singleton_CurrencyManager
  langs:
  - csharp
  - vb
  name: goalhardCurrency
  nameWithType: Singleton_CurrencyManager.goalhardCurrency
  fullName: Singleton_CurrencyManager.goalhardCurrency
  type: Field
  source:
    id: goalhardCurrency
    path: ''
    startLine: 14615
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public int goalhardCurrency
    return:
      type: System.Int32
    content.vb: Public goalhardCurrency As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_CurrencyManager.goalsoftCurrency
  commentId: F:Global.Singleton_CurrencyManager.goalsoftCurrency
  id: goalsoftCurrency
  parent: Global.Singleton_CurrencyManager
  langs:
  - csharp
  - vb
  name: goalsoftCurrency
  nameWithType: Singleton_CurrencyManager.goalsoftCurrency
  fullName: Singleton_CurrencyManager.goalsoftCurrency
  type: Field
  source:
    id: goalsoftCurrency
    path: ''
    startLine: 14617
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public int goalsoftCurrency
    return:
      type: System.Int32
    content.vb: Public goalsoftCurrency As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_CurrencyManager.goalrewardCurrency
  commentId: F:Global.Singleton_CurrencyManager.goalrewardCurrency
  id: goalrewardCurrency
  parent: Global.Singleton_CurrencyManager
  langs:
  - csharp
  - vb
  name: goalrewardCurrency
  nameWithType: Singleton_CurrencyManager.goalrewardCurrency
  fullName: Singleton_CurrencyManager.goalrewardCurrency
  type: Field
  source:
    id: goalrewardCurrency
    path: ''
    startLine: 14619
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public int goalrewardCurrency
    return:
      type: System.Int32
    content.vb: Public goalrewardCurrency As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_CurrencyManager.textsToChangeHardCurrency
  commentId: F:Global.Singleton_CurrencyManager.textsToChangeHardCurrency
  id: textsToChangeHardCurrency
  parent: Global.Singleton_CurrencyManager
  langs:
  - csharp
  - vb
  name: textsToChangeHardCurrency
  nameWithType: Singleton_CurrencyManager.textsToChangeHardCurrency
  fullName: Singleton_CurrencyManager.textsToChangeHardCurrency
  type: Field
  source:
    id: textsToChangeHardCurrency
    path: ''
    startLine: 14621
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public List<UI_ChangeCurrencyVisual> textsToChangeHardCurrency
    return:
      type: System.Collections.Generic.List{UI_ChangeCurrencyVisual}
    content.vb: Public textsToChangeHardCurrency As List(Of UI_ChangeCurrencyVisual)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_CurrencyManager.textsToChangeSoftCurrency
  commentId: F:Global.Singleton_CurrencyManager.textsToChangeSoftCurrency
  id: textsToChangeSoftCurrency
  parent: Global.Singleton_CurrencyManager
  langs:
  - csharp
  - vb
  name: textsToChangeSoftCurrency
  nameWithType: Singleton_CurrencyManager.textsToChangeSoftCurrency
  fullName: Singleton_CurrencyManager.textsToChangeSoftCurrency
  type: Field
  source:
    id: textsToChangeSoftCurrency
    path: ''
    startLine: 14622
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public List<UI_ChangeCurrencyVisual> textsToChangeSoftCurrency
    return:
      type: System.Collections.Generic.List{UI_ChangeCurrencyVisual}
    content.vb: Public textsToChangeSoftCurrency As List(Of UI_ChangeCurrencyVisual)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_CurrencyManager.textsToChangeRewardCurrency
  commentId: F:Global.Singleton_CurrencyManager.textsToChangeRewardCurrency
  id: textsToChangeRewardCurrency
  parent: Global.Singleton_CurrencyManager
  langs:
  - csharp
  - vb
  name: textsToChangeRewardCurrency
  nameWithType: Singleton_CurrencyManager.textsToChangeRewardCurrency
  fullName: Singleton_CurrencyManager.textsToChangeRewardCurrency
  type: Field
  source:
    id: textsToChangeRewardCurrency
    path: ''
    startLine: 14623
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public List<UI_ChangeCurrencyVisual> textsToChangeRewardCurrency
    return:
      type: System.Collections.Generic.List{UI_ChangeCurrencyVisual}
    content.vb: Public textsToChangeRewardCurrency As List(Of UI_ChangeCurrencyVisual)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_CurrencyManager.Awake
  commentId: M:Global.Singleton_CurrencyManager.Awake
  id: Awake
  parent: Global.Singleton_CurrencyManager
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: Singleton_CurrencyManager.Awake()
  fullName: Singleton_CurrencyManager.Awake()
  type: Method
  source:
    id: Awake
    path: ''
    startLine: 14638
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected override void Awake()
    content.vb: Protected Overrides Sub Awake
  overridden: Global.Singleton{Singleton_CurrencyManager}.Awake
  overload: Global.Singleton_CurrencyManager.Awake*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Global.Singleton_CurrencyManager.UpdateCurrencyTexts(System.String)
  commentId: M:Global.Singleton_CurrencyManager.UpdateCurrencyTexts(System.String)
  id: UpdateCurrencyTexts(System.String)
  parent: Global.Singleton_CurrencyManager
  langs:
  - csharp
  - vb
  name: UpdateCurrencyTexts(String)
  nameWithType: Singleton_CurrencyManager.UpdateCurrencyTexts(String)
  fullName: Singleton_CurrencyManager.UpdateCurrencyTexts(System.String)
  type: Method
  source:
    id: UpdateCurrencyTexts
    path: ''
    startLine: 14653
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public void UpdateCurrencyTexts(string typeOfCurrency)
    parameters:
    - id: typeOfCurrency
      type: System.String
    content.vb: Public Sub UpdateCurrencyTexts(typeOfCurrency As String)
  overload: Global.Singleton_CurrencyManager.UpdateCurrencyTexts*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Global.Singleton{Singleton_CurrencyManager}
  commentId: T:Global.Singleton{Singleton_CurrencyManager}
  definition: Global.Singleton`1
  name: Singleton<Singleton_CurrencyManager>
  nameWithType: Singleton<Singleton_CurrencyManager>
  fullName: Singleton<Singleton_CurrencyManager>
  nameWithType.vb: Singleton(Of Singleton_CurrencyManager)
  fullName.vb: Singleton(Of Singleton_CurrencyManager)
  name.vb: Singleton(Of Singleton_CurrencyManager)
  spec.csharp:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.Singleton_CurrencyManager
    name: Singleton_CurrencyManager
    nameWithType: Singleton_CurrencyManager
    fullName: Singleton_CurrencyManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.Singleton_CurrencyManager
    name: Singleton_CurrencyManager
    nameWithType: Singleton_CurrencyManager
    fullName: Singleton_CurrencyManager
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_CurrencyManager}.Instance
  commentId: P:Global.Singleton{Singleton_CurrencyManager}.Instance
  parent: Global.Singleton{Singleton_CurrencyManager}
  definition: Global.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<Singleton_CurrencyManager>.Instance
  fullName: Singleton<Singleton_CurrencyManager>.Instance
  nameWithType.vb: Singleton(Of Singleton_CurrencyManager).Instance
  fullName.vb: Singleton(Of Singleton_CurrencyManager).Instance
- uid: Global.Singleton{Singleton_CurrencyManager}.StartCoroutine(System.Collections.IEnumerator)
  commentId: M:Global.Singleton{Singleton_CurrencyManager}.StartCoroutine(System.Collections.IEnumerator)
  parent: Global.Singleton{Singleton_CurrencyManager}
  definition: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  name: StartCoroutine(IEnumerator)
  nameWithType: Singleton<Singleton_CurrencyManager>.StartCoroutine(IEnumerator)
  fullName: Singleton<Singleton_CurrencyManager>.StartCoroutine(System.Collections.IEnumerator)
  nameWithType.vb: Singleton(Of Singleton_CurrencyManager).StartCoroutine(IEnumerator)
  fullName.vb: Singleton(Of Singleton_CurrencyManager).StartCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton<Singleton_CurrencyManager>.StartCoroutine
    fullName: Singleton<Singleton_CurrencyManager>.StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton(Of Singleton_CurrencyManager).StartCoroutine
    fullName: Singleton(Of Singleton_CurrencyManager).StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_CurrencyManager}.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Global.Singleton{Singleton_CurrencyManager}.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  parent: Global.Singleton{Singleton_CurrencyManager}
  definition: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  name: AddCallbacks(Boolean, Boolean, Boolean)
  nameWithType: Singleton<Singleton_CurrencyManager>.AddCallbacks(Boolean, Boolean, Boolean)
  fullName: Singleton<Singleton_CurrencyManager>.AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  nameWithType.vb: Singleton(Of Singleton_CurrencyManager).AddCallbacks(Boolean, Boolean, Boolean)
  fullName.vb: Singleton(Of Singleton_CurrencyManager).AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton<Singleton_CurrencyManager>.AddCallbacks
    fullName: Singleton<Singleton_CurrencyManager>.AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton(Of Singleton_CurrencyManager).AddCallbacks
    fullName: Singleton(Of Singleton_CurrencyManager).AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_CurrencyManager}.Start
  commentId: M:Global.Singleton{Singleton_CurrencyManager}.Start
  parent: Global.Singleton{Singleton_CurrencyManager}
  definition: Global.Singleton`1.Start
  name: Start()
  nameWithType: Singleton<Singleton_CurrencyManager>.Start()
  fullName: Singleton<Singleton_CurrencyManager>.Start()
  nameWithType.vb: Singleton(Of Singleton_CurrencyManager).Start()
  fullName.vb: Singleton(Of Singleton_CurrencyManager).Start()
  spec.csharp:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton<Singleton_CurrencyManager>.Start
    fullName: Singleton<Singleton_CurrencyManager>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton(Of Singleton_CurrencyManager).Start
    fullName: Singleton(Of Singleton_CurrencyManager).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_CurrencyManager}.Update
  commentId: M:Global.Singleton{Singleton_CurrencyManager}.Update
  parent: Global.Singleton{Singleton_CurrencyManager}
  definition: Global.Singleton`1.Update
  name: Update()
  nameWithType: Singleton<Singleton_CurrencyManager>.Update()
  fullName: Singleton<Singleton_CurrencyManager>.Update()
  nameWithType.vb: Singleton(Of Singleton_CurrencyManager).Update()
  fullName.vb: Singleton(Of Singleton_CurrencyManager).Update()
  spec.csharp:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton<Singleton_CurrencyManager>.Update
    fullName: Singleton<Singleton_CurrencyManager>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton(Of Singleton_CurrencyManager).Update
    fullName: Singleton(Of Singleton_CurrencyManager).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Singleton`1
  commentId: T:Global.Singleton`1
  name: Singleton<T>
  nameWithType: Singleton<T>
  fullName: Singleton<T>
  nameWithType.vb: Singleton(Of T)
  fullName.vb: Singleton(Of T)
  name.vb: Singleton(Of T)
  spec.csharp:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Instance
  commentId: P:Global.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<T>.Instance
  fullName: Singleton<T>.Instance
  nameWithType.vb: Singleton(Of T).Instance
  fullName.vb: Singleton(Of T).Instance
- uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  commentId: M:Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  isExternal: true
  name: StartCoroutine(IEnumerator)
  nameWithType: Singleton<T>.StartCoroutine(IEnumerator)
  fullName: Singleton<T>.StartCoroutine(System.Collections.IEnumerator)
  nameWithType.vb: Singleton(Of T).StartCoroutine(IEnumerator)
  fullName.vb: Singleton(Of T).StartCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton<T>.StartCoroutine
    fullName: Singleton<T>.StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton(Of T).StartCoroutine
    fullName: Singleton(Of T).StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  isExternal: true
  name: AddCallbacks(Boolean, Boolean, Boolean)
  nameWithType: Singleton<T>.AddCallbacks(Boolean, Boolean, Boolean)
  fullName: Singleton<T>.AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  nameWithType.vb: Singleton(Of T).AddCallbacks(Boolean, Boolean, Boolean)
  fullName.vb: Singleton(Of T).AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton<T>.AddCallbacks
    fullName: Singleton<T>.AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton(Of T).AddCallbacks
    fullName: Singleton(Of T).AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Start
  commentId: M:Global.Singleton`1.Start
  name: Start()
  nameWithType: Singleton<T>.Start()
  fullName: Singleton<T>.Start()
  nameWithType.vb: Singleton(Of T).Start()
  fullName.vb: Singleton(Of T).Start()
  spec.csharp:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton<T>.Start
    fullName: Singleton<T>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton(Of T).Start
    fullName: Singleton(Of T).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Update
  commentId: M:Global.Singleton`1.Update
  name: Update()
  nameWithType: Singleton<T>.Update()
  fullName: Singleton<T>.Update()
  nameWithType.vb: Singleton(Of T).Update()
  fullName.vb: Singleton(Of T).Update()
  spec.csharp:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton<T>.Update
    fullName: Singleton<T>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton(Of T).Update
    fullName: Singleton(Of T).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{UI_ChangeCurrencyVisual}
  commentId: T:System.Collections.Generic.List{UI_ChangeCurrencyVisual}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UI_ChangeCurrencyVisual>
  nameWithType: List<UI_ChangeCurrencyVisual>
  fullName: System.Collections.Generic.List<UI_ChangeCurrencyVisual>
  nameWithType.vb: List(Of UI_ChangeCurrencyVisual)
  fullName.vb: System.Collections.Generic.List(Of UI_ChangeCurrencyVisual)
  name.vb: List(Of UI_ChangeCurrencyVisual)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.UI_ChangeCurrencyVisual
    name: UI_ChangeCurrencyVisual
    nameWithType: UI_ChangeCurrencyVisual
    fullName: UI_ChangeCurrencyVisual
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.UI_ChangeCurrencyVisual
    name: UI_ChangeCurrencyVisual
    nameWithType: UI_ChangeCurrencyVisual
    fullName: UI_ChangeCurrencyVisual
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Global.Singleton{Singleton_CurrencyManager}.Awake
  commentId: M:Global.Singleton{Singleton_CurrencyManager}.Awake
  parent: Global.Singleton{Singleton_CurrencyManager}
  definition: Global.Singleton`1.Awake
  name: Awake()
  nameWithType: Singleton<Singleton_CurrencyManager>.Awake()
  fullName: Singleton<Singleton_CurrencyManager>.Awake()
  nameWithType.vb: Singleton(Of Singleton_CurrencyManager).Awake()
  fullName.vb: Singleton(Of Singleton_CurrencyManager).Awake()
  spec.csharp:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton<Singleton_CurrencyManager>.Awake
    fullName: Singleton<Singleton_CurrencyManager>.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton(Of Singleton_CurrencyManager).Awake
    fullName: Singleton(Of Singleton_CurrencyManager).Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton_CurrencyManager.Awake*
  commentId: Overload:Global.Singleton_CurrencyManager.Awake
  name: Awake
  nameWithType: Singleton_CurrencyManager.Awake
  fullName: Singleton_CurrencyManager.Awake
- uid: Global.Singleton`1.Awake
  commentId: M:Global.Singleton`1.Awake
  name: Awake()
  nameWithType: Singleton<T>.Awake()
  fullName: Singleton<T>.Awake()
  nameWithType.vb: Singleton(Of T).Awake()
  fullName.vb: Singleton(Of T).Awake()
  spec.csharp:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton<T>.Awake
    fullName: Singleton<T>.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton(Of T).Awake
    fullName: Singleton(Of T).Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton_CurrencyManager.UpdateCurrencyTexts*
  commentId: Overload:Global.Singleton_CurrencyManager.UpdateCurrencyTexts
  name: UpdateCurrencyTexts
  nameWithType: Singleton_CurrencyManager.UpdateCurrencyTexts
  fullName: Singleton_CurrencyManager.UpdateCurrencyTexts
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
