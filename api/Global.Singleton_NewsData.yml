### YamlMime:ManagedReference
items:
- uid: Global.Singleton_NewsData
  commentId: T:Global.Singleton_NewsData
  id: Singleton_NewsData
  parent: Global
  children:
  - Global.Singleton_NewsData.errorImageURL
  - Global.Singleton_NewsData.Initialize(System.String)
  - Global.Singleton_NewsData.loadFolderPath
  - Global.Singleton_NewsData.news
  - Global.Singleton_NewsData.onConvertingComplete
  - Global.Singleton_NewsData.Start
  langs:
  - csharp
  - vb
  name: Singleton_NewsData
  nameWithType: Singleton_NewsData
  fullName: Singleton_NewsData
  type: Class
  source:
    id: Singleton_NewsData
    path: ''
    startLine: 20978
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: 'public class Singleton_NewsData : Singleton<Singleton_NewsData>'
    content.vb: >-
      Public Class Singleton_NewsData
          Inherits Singleton(Of Singleton_NewsData)
  inheritance:
  - System.Object
  - Global.Singleton{Singleton_NewsData}
  inheritedMembers:
  - Global.Singleton{Singleton_NewsData}.Instance
  - Global.Singleton{Singleton_NewsData}.StartCoroutine(System.Collections.IEnumerator)
  - Global.Singleton{Singleton_NewsData}.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  - Global.Singleton{Singleton_NewsData}.Awake
  - Global.Singleton{Singleton_NewsData}.Update
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.Singleton_NewsData.news
  commentId: F:Global.Singleton_NewsData.news
  id: news
  parent: Global.Singleton_NewsData
  langs:
  - csharp
  - vb
  name: news
  nameWithType: Singleton_NewsData.news
  fullName: Singleton_NewsData.news
  type: Field
  source:
    id: news
    path: ''
    startLine: 20982
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public TribiewNews news
    return:
      type: Global.TribiewNews
    content.vb: Public news As TribiewNews
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_NewsData.onConvertingComplete
  commentId: E:Global.Singleton_NewsData.onConvertingComplete
  id: onConvertingComplete
  parent: Global.Singleton_NewsData
  langs:
  - csharp
  - vb
  name: onConvertingComplete
  nameWithType: Singleton_NewsData.onConvertingComplete
  fullName: Singleton_NewsData.onConvertingComplete
  type: Event
  source:
    id: onConvertingComplete
    path: ''
    startLine: 20987
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public event Singleton_NewsData.OnEvent onConvertingComplete
    return:
      type: Global.Singleton_NewsData.OnEvent
    content.vb: Public Event onConvertingComplete As Singleton_NewsData.OnEvent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_NewsData.errorImageURL
  commentId: F:Global.Singleton_NewsData.errorImageURL
  id: errorImageURL
  parent: Global.Singleton_NewsData
  langs:
  - csharp
  - vb
  name: errorImageURL
  nameWithType: Singleton_NewsData.errorImageURL
  fullName: Singleton_NewsData.errorImageURL
  type: Field
  source:
    id: errorImageURL
    path: ''
    startLine: 20989
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public const string errorImageURL = "s3://com.tribiew.testwebapp/TribiewV0.4/Tribiew_Images/Error_Imagemissing.png"
    return:
      type: System.String
    content.vb: Public Const errorImageURL As String = "s3://com.tribiew.testwebapp/TribiewV0.4/Tribiew_Images/Error_Imagemissing.png"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Global.Singleton_NewsData.loadFolderPath
  commentId: P:Global.Singleton_NewsData.loadFolderPath
  id: loadFolderPath
  parent: Global.Singleton_NewsData
  langs:
  - csharp
  - vb
  name: loadFolderPath
  nameWithType: Singleton_NewsData.loadFolderPath
  fullName: Singleton_NewsData.loadFolderPath
  type: Property
  source:
    id: loadFolderPath
    path: ''
    startLine: 20999
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public static string loadFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property loadFolderPath As String
  overload: Global.Singleton_NewsData.loadFolderPath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Global.Singleton_NewsData.Initialize(System.String)
  commentId: M:Global.Singleton_NewsData.Initialize(System.String)
  id: Initialize(System.String)
  parent: Global.Singleton_NewsData
  langs:
  - csharp
  - vb
  name: Initialize(String)
  nameWithType: Singleton_NewsData.Initialize(String)
  fullName: Singleton_NewsData.Initialize(System.String)
  type: Method
  source:
    id: Initialize
    path: ''
    startLine: 21005
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public void Initialize(string tribiewNewsFolderPath)
    parameters:
    - id: tribiewNewsFolderPath
      type: System.String
    content.vb: Public Sub Initialize(tribiewNewsFolderPath As String)
  overload: Global.Singleton_NewsData.Initialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_NewsData.Start
  commentId: M:Global.Singleton_NewsData.Start
  id: Start
  parent: Global.Singleton_NewsData
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Singleton_NewsData.Start()
  fullName: Singleton_NewsData.Start()
  type: Method
  source:
    id: Start
    path: ''
    startLine: 21016
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected override void Start()
    content.vb: Protected Overrides Sub Start
  overridden: Global.Singleton{Singleton_NewsData}.Start
  overload: Global.Singleton_NewsData.Start*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Global.Singleton{Singleton_NewsData}
  commentId: T:Global.Singleton{Singleton_NewsData}
  definition: Global.Singleton`1
  name: Singleton<Singleton_NewsData>
  nameWithType: Singleton<Singleton_NewsData>
  fullName: Singleton<Singleton_NewsData>
  nameWithType.vb: Singleton(Of Singleton_NewsData)
  fullName.vb: Singleton(Of Singleton_NewsData)
  name.vb: Singleton(Of Singleton_NewsData)
  spec.csharp:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.Singleton_NewsData
    name: Singleton_NewsData
    nameWithType: Singleton_NewsData
    fullName: Singleton_NewsData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.Singleton_NewsData
    name: Singleton_NewsData
    nameWithType: Singleton_NewsData
    fullName: Singleton_NewsData
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_NewsData}.Instance
  commentId: P:Global.Singleton{Singleton_NewsData}.Instance
  parent: Global.Singleton{Singleton_NewsData}
  definition: Global.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<Singleton_NewsData>.Instance
  fullName: Singleton<Singleton_NewsData>.Instance
  nameWithType.vb: Singleton(Of Singleton_NewsData).Instance
  fullName.vb: Singleton(Of Singleton_NewsData).Instance
- uid: Global.Singleton{Singleton_NewsData}.StartCoroutine(System.Collections.IEnumerator)
  commentId: M:Global.Singleton{Singleton_NewsData}.StartCoroutine(System.Collections.IEnumerator)
  parent: Global.Singleton{Singleton_NewsData}
  definition: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  name: StartCoroutine(IEnumerator)
  nameWithType: Singleton<Singleton_NewsData>.StartCoroutine(IEnumerator)
  fullName: Singleton<Singleton_NewsData>.StartCoroutine(System.Collections.IEnumerator)
  nameWithType.vb: Singleton(Of Singleton_NewsData).StartCoroutine(IEnumerator)
  fullName.vb: Singleton(Of Singleton_NewsData).StartCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton<Singleton_NewsData>.StartCoroutine
    fullName: Singleton<Singleton_NewsData>.StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton(Of Singleton_NewsData).StartCoroutine
    fullName: Singleton(Of Singleton_NewsData).StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_NewsData}.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Global.Singleton{Singleton_NewsData}.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  parent: Global.Singleton{Singleton_NewsData}
  definition: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  name: AddCallbacks(Boolean, Boolean, Boolean)
  nameWithType: Singleton<Singleton_NewsData>.AddCallbacks(Boolean, Boolean, Boolean)
  fullName: Singleton<Singleton_NewsData>.AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  nameWithType.vb: Singleton(Of Singleton_NewsData).AddCallbacks(Boolean, Boolean, Boolean)
  fullName.vb: Singleton(Of Singleton_NewsData).AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton<Singleton_NewsData>.AddCallbacks
    fullName: Singleton<Singleton_NewsData>.AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton(Of Singleton_NewsData).AddCallbacks
    fullName: Singleton(Of Singleton_NewsData).AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_NewsData}.Awake
  commentId: M:Global.Singleton{Singleton_NewsData}.Awake
  parent: Global.Singleton{Singleton_NewsData}
  definition: Global.Singleton`1.Awake
  name: Awake()
  nameWithType: Singleton<Singleton_NewsData>.Awake()
  fullName: Singleton<Singleton_NewsData>.Awake()
  nameWithType.vb: Singleton(Of Singleton_NewsData).Awake()
  fullName.vb: Singleton(Of Singleton_NewsData).Awake()
  spec.csharp:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton<Singleton_NewsData>.Awake
    fullName: Singleton<Singleton_NewsData>.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton(Of Singleton_NewsData).Awake
    fullName: Singleton(Of Singleton_NewsData).Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_NewsData}.Update
  commentId: M:Global.Singleton{Singleton_NewsData}.Update
  parent: Global.Singleton{Singleton_NewsData}
  definition: Global.Singleton`1.Update
  name: Update()
  nameWithType: Singleton<Singleton_NewsData>.Update()
  fullName: Singleton<Singleton_NewsData>.Update()
  nameWithType.vb: Singleton(Of Singleton_NewsData).Update()
  fullName.vb: Singleton(Of Singleton_NewsData).Update()
  spec.csharp:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton<Singleton_NewsData>.Update
    fullName: Singleton<Singleton_NewsData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton(Of Singleton_NewsData).Update
    fullName: Singleton(Of Singleton_NewsData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Singleton`1
  commentId: T:Global.Singleton`1
  name: Singleton<T>
  nameWithType: Singleton<T>
  fullName: Singleton<T>
  nameWithType.vb: Singleton(Of T)
  fullName.vb: Singleton(Of T)
  name.vb: Singleton(Of T)
  spec.csharp:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Instance
  commentId: P:Global.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<T>.Instance
  fullName: Singleton<T>.Instance
  nameWithType.vb: Singleton(Of T).Instance
  fullName.vb: Singleton(Of T).Instance
- uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  commentId: M:Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  isExternal: true
  name: StartCoroutine(IEnumerator)
  nameWithType: Singleton<T>.StartCoroutine(IEnumerator)
  fullName: Singleton<T>.StartCoroutine(System.Collections.IEnumerator)
  nameWithType.vb: Singleton(Of T).StartCoroutine(IEnumerator)
  fullName.vb: Singleton(Of T).StartCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton<T>.StartCoroutine
    fullName: Singleton<T>.StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton(Of T).StartCoroutine
    fullName: Singleton(Of T).StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  isExternal: true
  name: AddCallbacks(Boolean, Boolean, Boolean)
  nameWithType: Singleton<T>.AddCallbacks(Boolean, Boolean, Boolean)
  fullName: Singleton<T>.AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  nameWithType.vb: Singleton(Of T).AddCallbacks(Boolean, Boolean, Boolean)
  fullName.vb: Singleton(Of T).AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton<T>.AddCallbacks
    fullName: Singleton<T>.AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton(Of T).AddCallbacks
    fullName: Singleton(Of T).AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Awake
  commentId: M:Global.Singleton`1.Awake
  name: Awake()
  nameWithType: Singleton<T>.Awake()
  fullName: Singleton<T>.Awake()
  nameWithType.vb: Singleton(Of T).Awake()
  fullName.vb: Singleton(Of T).Awake()
  spec.csharp:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton<T>.Awake
    fullName: Singleton<T>.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton(Of T).Awake
    fullName: Singleton(Of T).Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Update
  commentId: M:Global.Singleton`1.Update
  name: Update()
  nameWithType: Singleton<T>.Update()
  fullName: Singleton<T>.Update()
  nameWithType.vb: Singleton(Of T).Update()
  fullName.vb: Singleton(Of T).Update()
  spec.csharp:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton<T>.Update
    fullName: Singleton<T>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton(Of T).Update
    fullName: Singleton(Of T).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.TribiewNews
  commentId: T:Global.TribiewNews
  name: TribiewNews
  nameWithType: TribiewNews
  fullName: TribiewNews
- uid: Global.Singleton_NewsData.OnEvent
  commentId: T:Global.Singleton_NewsData.OnEvent
  name: Singleton_NewsData.OnEvent
  nameWithType: Singleton_NewsData.OnEvent
  fullName: Singleton_NewsData.OnEvent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Global.Singleton_NewsData.loadFolderPath*
  commentId: Overload:Global.Singleton_NewsData.loadFolderPath
  name: loadFolderPath
  nameWithType: Singleton_NewsData.loadFolderPath
  fullName: Singleton_NewsData.loadFolderPath
- uid: Global.Singleton_NewsData.Initialize*
  commentId: Overload:Global.Singleton_NewsData.Initialize
  name: Initialize
  nameWithType: Singleton_NewsData.Initialize
  fullName: Singleton_NewsData.Initialize
- uid: Global.Singleton{Singleton_NewsData}.Start
  commentId: M:Global.Singleton{Singleton_NewsData}.Start
  parent: Global.Singleton{Singleton_NewsData}
  definition: Global.Singleton`1.Start
  name: Start()
  nameWithType: Singleton<Singleton_NewsData>.Start()
  fullName: Singleton<Singleton_NewsData>.Start()
  nameWithType.vb: Singleton(Of Singleton_NewsData).Start()
  fullName.vb: Singleton(Of Singleton_NewsData).Start()
  spec.csharp:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton<Singleton_NewsData>.Start
    fullName: Singleton<Singleton_NewsData>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton(Of Singleton_NewsData).Start
    fullName: Singleton(Of Singleton_NewsData).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton_NewsData.Start*
  commentId: Overload:Global.Singleton_NewsData.Start
  name: Start
  nameWithType: Singleton_NewsData.Start
  fullName: Singleton_NewsData.Start
- uid: Global.Singleton`1.Start
  commentId: M:Global.Singleton`1.Start
  name: Start()
  nameWithType: Singleton<T>.Start()
  fullName: Singleton<T>.Start()
  nameWithType.vb: Singleton(Of T).Start()
  fullName.vb: Singleton(Of T).Start()
  spec.csharp:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton<T>.Start
    fullName: Singleton<T>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton(Of T).Start
    fullName: Singleton(Of T).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
