### YamlMime:ManagedReference
items:
- uid: Global.Singleton_ImagePooling
  commentId: T:Global.Singleton_ImagePooling
  id: Singleton_ImagePooling
  parent: Global
  children:
  - Global.Singleton_ImagePooling.Awake
  - Global.Singleton_ImagePooling.DownloadImage(System.String,OnTextureDownloadingComplete)
  - Global.Singleton_ImagePooling.GenericImage
  - Global.Singleton_ImagePooling.GetExtension(System.String)
  - Global.Singleton_ImagePooling.GetImageFromPool(System.String)
  - Global.Singleton_ImagePooling.GetImageName(System.String)
  - Global.Singleton_ImagePooling.imagePool
  - Global.Singleton_ImagePooling.loadFolderPath
  - Global.Singleton_ImagePooling.LoadImage(System.String,OnTextureDownloadingComplete)
  - Global.Singleton_ImagePooling.LoadImageAsSingleton(System.String,OnTextureDownloadingComplete)
  - Global.Singleton_ImagePooling.missingTex
  - Global.Singleton_ImagePooling.RemoveUnusedImagesOnDisk
  - Global.Singleton_ImagePooling.SaveImage(System.String,Texture2D)
  langs:
  - csharp
  - vb
  name: Singleton_ImagePooling
  nameWithType: Singleton_ImagePooling
  fullName: Singleton_ImagePooling
  type: Class
  source:
    id: Singleton_ImagePooling
    path: ''
    startLine: 18955
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nImage pooling manages all the loading and downloading of images\nThere shouldn&apos;t be any non-static image that shouldn&apos;t pass through the Pool\n"
  example: []
  syntax:
    content: 'public class Singleton_ImagePooling : Singleton<Singleton_ImagePooling>'
    content.vb: >-
      Public Class Singleton_ImagePooling
          Inherits Singleton(Of Singleton_ImagePooling)
  inheritance:
  - System.Object
  - Global.Singleton{Singleton_ImagePooling}
  inheritedMembers:
  - Global.Singleton{Singleton_ImagePooling}.Instance
  - Global.Singleton{Singleton_ImagePooling}.StartCoroutine(System.Collections.IEnumerator)
  - Global.Singleton{Singleton_ImagePooling}.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  - Global.Singleton{Singleton_ImagePooling}.Start
  - Global.Singleton{Singleton_ImagePooling}.Update
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.Singleton_ImagePooling.missingTex
  commentId: F:Global.Singleton_ImagePooling.missingTex
  id: missingTex
  parent: Global.Singleton_ImagePooling
  langs:
  - csharp
  - vb
  name: missingTex
  nameWithType: Singleton_ImagePooling.missingTex
  fullName: Singleton_ImagePooling.missingTex
  type: Field
  source:
    id: missingTex
    path: ''
    startLine: 18957
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public Texture2D missingTex
    return:
      type: Global.Texture2D
    content.vb: Public missingTex As Texture2D
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_ImagePooling.loadFolderPath
  commentId: P:Global.Singleton_ImagePooling.loadFolderPath
  id: loadFolderPath
  parent: Global.Singleton_ImagePooling
  langs:
  - csharp
  - vb
  name: loadFolderPath
  nameWithType: Singleton_ImagePooling.loadFolderPath
  fullName: Singleton_ImagePooling.loadFolderPath
  type: Property
  source:
    id: loadFolderPath
    path: ''
    startLine: 18969
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public static string loadFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property loadFolderPath As String
  overload: Global.Singleton_ImagePooling.loadFolderPath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Global.Singleton_ImagePooling.GenericImage
  commentId: P:Global.Singleton_ImagePooling.GenericImage
  id: GenericImage
  parent: Global.Singleton_ImagePooling
  langs:
  - csharp
  - vb
  name: GenericImage
  nameWithType: Singleton_ImagePooling.GenericImage
  fullName: Singleton_ImagePooling.GenericImage
  type: Property
  source:
    id: GenericImage
    path: ''
    startLine: 18975
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public static Texture2D GenericImage { get; set; }
    parameters: []
    return:
      type: Global.Texture2D
    content.vb: Public Shared Property GenericImage As Texture2D
  overload: Global.Singleton_ImagePooling.GenericImage*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Singleton_ImagePooling.Awake
  commentId: M:Global.Singleton_ImagePooling.Awake
  id: Awake
  parent: Global.Singleton_ImagePooling
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: Singleton_ImagePooling.Awake()
  fullName: Singleton_ImagePooling.Awake()
  type: Method
  source:
    id: Awake
    path: ''
    startLine: 18985
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected override void Awake()
    content.vb: Protected Overrides Sub Awake
  overridden: Global.Singleton{Singleton_ImagePooling}.Awake
  overload: Global.Singleton_ImagePooling.Awake*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Global.Singleton_ImagePooling.imagePool
  commentId: F:Global.Singleton_ImagePooling.imagePool
  id: imagePool
  parent: Global.Singleton_ImagePooling
  langs:
  - csharp
  - vb
  name: imagePool
  nameWithType: Singleton_ImagePooling.imagePool
  fullName: Singleton_ImagePooling.imagePool
  type: Field
  source:
    id: imagePool
    path: ''
    startLine: 19008
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public Dictionary<string, Texture2D> imagePool
    return:
      type: System.Collections.Generic.Dictionary{System.String,Texture2D}
    content.vb: Public imagePool As Dictionary(Of String, Texture2D)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_ImagePooling.GetImageFromPool(System.String)
  commentId: M:Global.Singleton_ImagePooling.GetImageFromPool(System.String)
  id: GetImageFromPool(System.String)
  parent: Global.Singleton_ImagePooling
  langs:
  - csharp
  - vb
  name: GetImageFromPool(String)
  nameWithType: Singleton_ImagePooling.GetImageFromPool(String)
  fullName: Singleton_ImagePooling.GetImageFromPool(System.String)
  type: Method
  source:
    id: GetImageFromPool
    path: ''
    startLine: 19015
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nThis method may be used if you do not want any download to be made\n"
  example: []
  syntax:
    content: public Texture2D GetImageFromPool(string _imageUrl)
    parameters:
    - id: _imageUrl
      type: System.String
      description: The URL of the given image
    return:
      type: Global.Texture2D
      description: Returns a texture2D. May be the loaded texture or the Generic Image
    content.vb: Public Function GetImageFromPool(_imageUrl As String) As Texture2D
  overload: Global.Singleton_ImagePooling.GetImageFromPool*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_ImagePooling.SaveImage(System.String,Texture2D)
  commentId: M:Global.Singleton_ImagePooling.SaveImage(System.String,Texture2D)
  id: SaveImage(System.String,Texture2D)
  parent: Global.Singleton_ImagePooling
  langs:
  - csharp
  - vb
  name: SaveImage(String, Texture2D)
  nameWithType: Singleton_ImagePooling.SaveImage(String, Texture2D)
  fullName: Singleton_ImagePooling.SaveImage(System.String, Texture2D)
  type: Method
  source:
    id: SaveImage
    path: ''
    startLine: 19082
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nSave Image takes a given texture2D and save it as a file in the image folder under the name cut from the passed URL / RegisterImage\n"
  example: []
  syntax:
    content: public void SaveImage(string _name, Texture2D _image)
    parameters:
    - id: _name
      type: System.String
      description: Might be a name or a URL. In any case, this will the name of the saved file.
    - id: _image
      type: Global.Texture2D
      description: The texture that will be saved on the file.
    content.vb: Public Sub SaveImage(_name As String, _image As Texture2D)
  overload: Global.Singleton_ImagePooling.SaveImage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_ImagePooling.GetImageName(System.String)
  commentId: M:Global.Singleton_ImagePooling.GetImageName(System.String)
  id: GetImageName(System.String)
  parent: Global.Singleton_ImagePooling
  langs:
  - csharp
  - vb
  name: GetImageName(String)
  nameWithType: Singleton_ImagePooling.GetImageName(String)
  fullName: Singleton_ImagePooling.GetImageName(System.String)
  type: Method
  source:
    id: GetImageName
    path: ''
    startLine: 19100
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nThis cuts the name from a URL\nExample : vvvv\nThe URL : https://cdn.discordapp.com/avatars/96012682175451136/40ed44e6ee440f2b4c4c9a07d968498d.png?size=2048\nBecomes : 40ed44e6ee440f2b4c4c9a07d968498d.png\n"
  example: []
  syntax:
    content: public static string GetImageName(string _name)
    parameters:
    - id: _name
      type: System.String
      description: The URL of the file
    return:
      type: System.String
      description: Returns the cutted name
    content.vb: Public Shared Function GetImageName(_name As String) As String
  overload: Global.Singleton_ImagePooling.GetImageName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Singleton_ImagePooling.GetExtension(System.String)
  commentId: M:Global.Singleton_ImagePooling.GetExtension(System.String)
  id: GetExtension(System.String)
  parent: Global.Singleton_ImagePooling
  langs:
  - csharp
  - vb
  name: GetExtension(String)
  nameWithType: Singleton_ImagePooling.GetExtension(String)
  fullName: Singleton_ImagePooling.GetExtension(System.String)
  type: Method
  source:
    id: GetExtension
    path: ''
    startLine: 19125
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nGetExtension compares the given URL or name and find the image type in the name\nYou can find and extend the supported types in Constants.imageExtensions (public static readonly string array)\n"
  example: []
  syntax:
    content: public static string GetExtension(string _name)
    parameters:
    - id: _name
      type: System.String
      description: The URL or name of the file
    return:
      type: System.String
      description: Return the extension found in string (.png, .jpeg, etc...)
    content.vb: Public Shared Function GetExtension(_name As String) As String
  overload: Global.Singleton_ImagePooling.GetExtension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Singleton_ImagePooling.LoadImageAsSingleton(System.String,OnTextureDownloadingComplete)
  commentId: M:Global.Singleton_ImagePooling.LoadImageAsSingleton(System.String,OnTextureDownloadingComplete)
  id: LoadImageAsSingleton(System.String,OnTextureDownloadingComplete)
  parent: Global.Singleton_ImagePooling
  langs:
  - csharp
  - vb
  name: LoadImageAsSingleton(String, OnTextureDownloadingComplete)
  nameWithType: Singleton_ImagePooling.LoadImageAsSingleton(String, OnTextureDownloadingComplete)
  fullName: Singleton_ImagePooling.LoadImageAsSingleton(System.String, OnTextureDownloadingComplete)
  type: Method
  source:
    id: LoadImageAsSingleton
    path: ''
    startLine: 19143
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nLoadImageAsSingleton is the primary method for getting image files\nIt first tries to find the image in the dictionary\nIf it&apos;s not present, it will try to load it from memory\nIf it&apos;s still not present, it will try to download it\nIn any case it attribution must be made with the callback\n"
  example: []
  syntax:
    content: public LoadFileReturnMessage LoadImageAsSingleton(string _imageUrl, OnTextureDownloadingComplete _callback = null)
    parameters:
    - id: _imageUrl
      type: System.String
      description: The URL of the image to load
    - id: _callback
      type: Global.OnTextureDownloadingComplete
      description: 'The actions you want to be done when image is loaded. Type : OnTextureDownloadingComplete'
    return:
      type: Global.LoadFileReturnMessage
      description: Returns a return message in the form of a LoadFileReturnMessage enum
    content.vb: Public Function LoadImageAsSingleton(_imageUrl As String, _callback As OnTextureDownloadingComplete = Nothing) As LoadFileReturnMessage
  overload: Global.Singleton_ImagePooling.LoadImageAsSingleton*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_ImagePooling.LoadImage(System.String,OnTextureDownloadingComplete)
  commentId: M:Global.Singleton_ImagePooling.LoadImage(System.String,OnTextureDownloadingComplete)
  id: LoadImage(System.String,OnTextureDownloadingComplete)
  parent: Global.Singleton_ImagePooling
  langs:
  - csharp
  - vb
  name: LoadImage(String, OnTextureDownloadingComplete)
  nameWithType: Singleton_ImagePooling.LoadImage(String, OnTextureDownloadingComplete)
  fullName: Singleton_ImagePooling.LoadImage(System.String, OnTextureDownloadingComplete)
  type: Method
  source:
    id: LoadImage
    path: ''
    startLine: 19208
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public static LoadFileReturnMessage LoadImage(string _imageUrl, OnTextureDownloadingComplete _callback = null)
    parameters:
    - id: _imageUrl
      type: System.String
    - id: _callback
      type: Global.OnTextureDownloadingComplete
    return:
      type: Global.LoadFileReturnMessage
    content.vb: Public Shared Function LoadImage(_imageUrl As String, _callback As OnTextureDownloadingComplete = Nothing) As LoadFileReturnMessage
  overload: Global.Singleton_ImagePooling.LoadImage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Singleton_ImagePooling.DownloadImage(System.String,OnTextureDownloadingComplete)
  commentId: M:Global.Singleton_ImagePooling.DownloadImage(System.String,OnTextureDownloadingComplete)
  id: DownloadImage(System.String,OnTextureDownloadingComplete)
  parent: Global.Singleton_ImagePooling
  langs:
  - csharp
  - vb
  name: DownloadImage(String, OnTextureDownloadingComplete)
  nameWithType: Singleton_ImagePooling.DownloadImage(String, OnTextureDownloadingComplete)
  fullName: Singleton_ImagePooling.DownloadImage(System.String, OnTextureDownloadingComplete)
  type: Method
  source:
    id: DownloadImage
    path: ''
    startLine: 19249
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nProxy for Download Image Coroutine\n"
  example: []
  syntax:
    content: public static void DownloadImage(string _url, OnTextureDownloadingComplete _callback)
    parameters:
    - id: _url
      type: System.String
      description: URL of the image you want to download
    - id: _callback
      type: Global.OnTextureDownloadingComplete
      description: Actions to do when image is downloaded
    content.vb: Public Shared Sub DownloadImage(_url As String, _callback As OnTextureDownloadingComplete)
  overload: Global.Singleton_ImagePooling.DownloadImage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Singleton_ImagePooling.RemoveUnusedImagesOnDisk
  commentId: M:Global.Singleton_ImagePooling.RemoveUnusedImagesOnDisk
  id: RemoveUnusedImagesOnDisk
  parent: Global.Singleton_ImagePooling
  langs:
  - csharp
  - vb
  name: RemoveUnusedImagesOnDisk()
  nameWithType: Singleton_ImagePooling.RemoveUnusedImagesOnDisk()
  fullName: Singleton_ImagePooling.RemoveUnusedImagesOnDisk()
  type: Method
  source:
    id: RemoveUnusedImagesOnDisk
    path: ''
    startLine: 19337
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nRemoves all unused images in folder\nImages are defined as unused when they aren&apos;t loaded by any object\n"
  example: []
  syntax:
    content: public void RemoveUnusedImagesOnDisk()
    content.vb: Public Sub RemoveUnusedImagesOnDisk
  overload: Global.Singleton_ImagePooling.RemoveUnusedImagesOnDisk*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Global.Singleton{Singleton_ImagePooling}
  commentId: T:Global.Singleton{Singleton_ImagePooling}
  definition: Global.Singleton`1
  name: Singleton<Singleton_ImagePooling>
  nameWithType: Singleton<Singleton_ImagePooling>
  fullName: Singleton<Singleton_ImagePooling>
  nameWithType.vb: Singleton(Of Singleton_ImagePooling)
  fullName.vb: Singleton(Of Singleton_ImagePooling)
  name.vb: Singleton(Of Singleton_ImagePooling)
  spec.csharp:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.Singleton_ImagePooling
    name: Singleton_ImagePooling
    nameWithType: Singleton_ImagePooling
    fullName: Singleton_ImagePooling
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.Singleton_ImagePooling
    name: Singleton_ImagePooling
    nameWithType: Singleton_ImagePooling
    fullName: Singleton_ImagePooling
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_ImagePooling}.Instance
  commentId: P:Global.Singleton{Singleton_ImagePooling}.Instance
  parent: Global.Singleton{Singleton_ImagePooling}
  definition: Global.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<Singleton_ImagePooling>.Instance
  fullName: Singleton<Singleton_ImagePooling>.Instance
  nameWithType.vb: Singleton(Of Singleton_ImagePooling).Instance
  fullName.vb: Singleton(Of Singleton_ImagePooling).Instance
- uid: Global.Singleton{Singleton_ImagePooling}.StartCoroutine(System.Collections.IEnumerator)
  commentId: M:Global.Singleton{Singleton_ImagePooling}.StartCoroutine(System.Collections.IEnumerator)
  parent: Global.Singleton{Singleton_ImagePooling}
  definition: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  name: StartCoroutine(IEnumerator)
  nameWithType: Singleton<Singleton_ImagePooling>.StartCoroutine(IEnumerator)
  fullName: Singleton<Singleton_ImagePooling>.StartCoroutine(System.Collections.IEnumerator)
  nameWithType.vb: Singleton(Of Singleton_ImagePooling).StartCoroutine(IEnumerator)
  fullName.vb: Singleton(Of Singleton_ImagePooling).StartCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton<Singleton_ImagePooling>.StartCoroutine
    fullName: Singleton<Singleton_ImagePooling>.StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton(Of Singleton_ImagePooling).StartCoroutine
    fullName: Singleton(Of Singleton_ImagePooling).StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_ImagePooling}.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Global.Singleton{Singleton_ImagePooling}.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  parent: Global.Singleton{Singleton_ImagePooling}
  definition: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  name: AddCallbacks(Boolean, Boolean, Boolean)
  nameWithType: Singleton<Singleton_ImagePooling>.AddCallbacks(Boolean, Boolean, Boolean)
  fullName: Singleton<Singleton_ImagePooling>.AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  nameWithType.vb: Singleton(Of Singleton_ImagePooling).AddCallbacks(Boolean, Boolean, Boolean)
  fullName.vb: Singleton(Of Singleton_ImagePooling).AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton<Singleton_ImagePooling>.AddCallbacks
    fullName: Singleton<Singleton_ImagePooling>.AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton(Of Singleton_ImagePooling).AddCallbacks
    fullName: Singleton(Of Singleton_ImagePooling).AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_ImagePooling}.Start
  commentId: M:Global.Singleton{Singleton_ImagePooling}.Start
  parent: Global.Singleton{Singleton_ImagePooling}
  definition: Global.Singleton`1.Start
  name: Start()
  nameWithType: Singleton<Singleton_ImagePooling>.Start()
  fullName: Singleton<Singleton_ImagePooling>.Start()
  nameWithType.vb: Singleton(Of Singleton_ImagePooling).Start()
  fullName.vb: Singleton(Of Singleton_ImagePooling).Start()
  spec.csharp:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton<Singleton_ImagePooling>.Start
    fullName: Singleton<Singleton_ImagePooling>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton(Of Singleton_ImagePooling).Start
    fullName: Singleton(Of Singleton_ImagePooling).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_ImagePooling}.Update
  commentId: M:Global.Singleton{Singleton_ImagePooling}.Update
  parent: Global.Singleton{Singleton_ImagePooling}
  definition: Global.Singleton`1.Update
  name: Update()
  nameWithType: Singleton<Singleton_ImagePooling>.Update()
  fullName: Singleton<Singleton_ImagePooling>.Update()
  nameWithType.vb: Singleton(Of Singleton_ImagePooling).Update()
  fullName.vb: Singleton(Of Singleton_ImagePooling).Update()
  spec.csharp:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton<Singleton_ImagePooling>.Update
    fullName: Singleton<Singleton_ImagePooling>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton(Of Singleton_ImagePooling).Update
    fullName: Singleton(Of Singleton_ImagePooling).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Singleton`1
  commentId: T:Global.Singleton`1
  name: Singleton<T>
  nameWithType: Singleton<T>
  fullName: Singleton<T>
  nameWithType.vb: Singleton(Of T)
  fullName.vb: Singleton(Of T)
  name.vb: Singleton(Of T)
  spec.csharp:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Instance
  commentId: P:Global.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<T>.Instance
  fullName: Singleton<T>.Instance
  nameWithType.vb: Singleton(Of T).Instance
  fullName.vb: Singleton(Of T).Instance
- uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  commentId: M:Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  isExternal: true
  name: StartCoroutine(IEnumerator)
  nameWithType: Singleton<T>.StartCoroutine(IEnumerator)
  fullName: Singleton<T>.StartCoroutine(System.Collections.IEnumerator)
  nameWithType.vb: Singleton(Of T).StartCoroutine(IEnumerator)
  fullName.vb: Singleton(Of T).StartCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton<T>.StartCoroutine
    fullName: Singleton<T>.StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton(Of T).StartCoroutine
    fullName: Singleton(Of T).StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  isExternal: true
  name: AddCallbacks(Boolean, Boolean, Boolean)
  nameWithType: Singleton<T>.AddCallbacks(Boolean, Boolean, Boolean)
  fullName: Singleton<T>.AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  nameWithType.vb: Singleton(Of T).AddCallbacks(Boolean, Boolean, Boolean)
  fullName.vb: Singleton(Of T).AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton<T>.AddCallbacks
    fullName: Singleton<T>.AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton(Of T).AddCallbacks
    fullName: Singleton(Of T).AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Start
  commentId: M:Global.Singleton`1.Start
  name: Start()
  nameWithType: Singleton<T>.Start()
  fullName: Singleton<T>.Start()
  nameWithType.vb: Singleton(Of T).Start()
  fullName.vb: Singleton(Of T).Start()
  spec.csharp:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton<T>.Start
    fullName: Singleton<T>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton(Of T).Start
    fullName: Singleton(Of T).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Update
  commentId: M:Global.Singleton`1.Update
  name: Update()
  nameWithType: Singleton<T>.Update()
  fullName: Singleton<T>.Update()
  nameWithType.vb: Singleton(Of T).Update()
  fullName.vb: Singleton(Of T).Update()
  spec.csharp:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton<T>.Update
    fullName: Singleton<T>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton(Of T).Update
    fullName: Singleton(Of T).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Texture2D
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: Texture2D
- uid: Global.Singleton_ImagePooling.loadFolderPath*
  commentId: Overload:Global.Singleton_ImagePooling.loadFolderPath
  name: loadFolderPath
  nameWithType: Singleton_ImagePooling.loadFolderPath
  fullName: Singleton_ImagePooling.loadFolderPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Global.Singleton_ImagePooling.GenericImage*
  commentId: Overload:Global.Singleton_ImagePooling.GenericImage
  name: GenericImage
  nameWithType: Singleton_ImagePooling.GenericImage
  fullName: Singleton_ImagePooling.GenericImage
- uid: Global.Singleton{Singleton_ImagePooling}.Awake
  commentId: M:Global.Singleton{Singleton_ImagePooling}.Awake
  parent: Global.Singleton{Singleton_ImagePooling}
  definition: Global.Singleton`1.Awake
  name: Awake()
  nameWithType: Singleton<Singleton_ImagePooling>.Awake()
  fullName: Singleton<Singleton_ImagePooling>.Awake()
  nameWithType.vb: Singleton(Of Singleton_ImagePooling).Awake()
  fullName.vb: Singleton(Of Singleton_ImagePooling).Awake()
  spec.csharp:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton<Singleton_ImagePooling>.Awake
    fullName: Singleton<Singleton_ImagePooling>.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton(Of Singleton_ImagePooling).Awake
    fullName: Singleton(Of Singleton_ImagePooling).Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton_ImagePooling.Awake*
  commentId: Overload:Global.Singleton_ImagePooling.Awake
  name: Awake
  nameWithType: Singleton_ImagePooling.Awake
  fullName: Singleton_ImagePooling.Awake
- uid: Global.Singleton`1.Awake
  commentId: M:Global.Singleton`1.Awake
  name: Awake()
  nameWithType: Singleton<T>.Awake()
  fullName: Singleton<T>.Awake()
  nameWithType.vb: Singleton(Of T).Awake()
  fullName.vb: Singleton(Of T).Awake()
  spec.csharp:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton<T>.Awake
    fullName: Singleton<T>.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton(Of T).Awake
    fullName: Singleton(Of T).Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,Texture2D}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Texture2D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Texture2D>
  nameWithType: Dictionary<String, Texture2D>
  fullName: System.Collections.Generic.Dictionary<System.String, Texture2D>
  nameWithType.vb: Dictionary(Of String, Texture2D)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Texture2D)
  name.vb: Dictionary(Of String, Texture2D)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Global.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: Texture2D
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Global.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: Texture2D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Global.Singleton_ImagePooling.GetImageFromPool*
  commentId: Overload:Global.Singleton_ImagePooling.GetImageFromPool
  name: GetImageFromPool
  nameWithType: Singleton_ImagePooling.GetImageFromPool
  fullName: Singleton_ImagePooling.GetImageFromPool
- uid: Global.Singleton_ImagePooling.SaveImage*
  commentId: Overload:Global.Singleton_ImagePooling.SaveImage
  name: SaveImage
  nameWithType: Singleton_ImagePooling.SaveImage
  fullName: Singleton_ImagePooling.SaveImage
- uid: Global.Singleton_ImagePooling.GetImageName*
  commentId: Overload:Global.Singleton_ImagePooling.GetImageName
  name: GetImageName
  nameWithType: Singleton_ImagePooling.GetImageName
  fullName: Singleton_ImagePooling.GetImageName
- uid: Global.Singleton_ImagePooling.GetExtension*
  commentId: Overload:Global.Singleton_ImagePooling.GetExtension
  name: GetExtension
  nameWithType: Singleton_ImagePooling.GetExtension
  fullName: Singleton_ImagePooling.GetExtension
- uid: Global.Singleton_ImagePooling.LoadImageAsSingleton*
  commentId: Overload:Global.Singleton_ImagePooling.LoadImageAsSingleton
  name: LoadImageAsSingleton
  nameWithType: Singleton_ImagePooling.LoadImageAsSingleton
  fullName: Singleton_ImagePooling.LoadImageAsSingleton
- uid: Global.OnTextureDownloadingComplete
  commentId: T:Global.OnTextureDownloadingComplete
  name: OnTextureDownloadingComplete
  nameWithType: OnTextureDownloadingComplete
  fullName: OnTextureDownloadingComplete
- uid: Global.LoadFileReturnMessage
  commentId: T:Global.LoadFileReturnMessage
  name: LoadFileReturnMessage
  nameWithType: LoadFileReturnMessage
  fullName: LoadFileReturnMessage
- uid: Global.Singleton_ImagePooling.LoadImage*
  commentId: Overload:Global.Singleton_ImagePooling.LoadImage
  name: LoadImage
  nameWithType: Singleton_ImagePooling.LoadImage
  fullName: Singleton_ImagePooling.LoadImage
- uid: Global.Singleton_ImagePooling.DownloadImage*
  commentId: Overload:Global.Singleton_ImagePooling.DownloadImage
  name: DownloadImage
  nameWithType: Singleton_ImagePooling.DownloadImage
  fullName: Singleton_ImagePooling.DownloadImage
- uid: Global.Singleton_ImagePooling.RemoveUnusedImagesOnDisk*
  commentId: Overload:Global.Singleton_ImagePooling.RemoveUnusedImagesOnDisk
  name: RemoveUnusedImagesOnDisk
  nameWithType: Singleton_ImagePooling.RemoveUnusedImagesOnDisk
  fullName: Singleton_ImagePooling.RemoveUnusedImagesOnDisk
