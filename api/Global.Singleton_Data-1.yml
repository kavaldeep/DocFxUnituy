### YamlMime:ManagedReference
items:
- uid: Global.Singleton_Data`1
  commentId: T:Global.Singleton_Data`1
  id: Singleton_Data`1
  parent: Global
  children:
  - Global.Singleton_Data`1.currentObject
  - Global.Singleton_Data`1.EnumeratorLoadImage
  - Global.Singleton_Data`1.Init
  - Global.Singleton_Data`1.listObject
  - Global.Singleton_Data`1.ListObject
  - Global.Singleton_Data`1.LoadImage
  - Global.Singleton_Data`1.NewObject
  - Global.Singleton_Data`1.OnParsingComplete
  - Global.Singleton_Data`1.ParsingComplete(Singleton_Data{`0})
  - Global.Singleton_Data`1.path
  - Global.Singleton_Data`1.Path
  - Global.Singleton_Data`1.SetValue(System.String,System.String)
  - Global.Singleton_Data`1.splitData
  langs:
  - csharp
  - vb
  name: Singleton_Data<T>
  nameWithType: Singleton_Data<T>
  fullName: Singleton_Data<T>
  type: Class
  source:
    id: Singleton_Data
    path: ''
    startLine: 17334
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: 'public abstract class Singleton_Data<T> : Singleton<T>, Interface_Singleton_Data where T : Singleton<T>'
    typeParameters:
    - id: T
    content.vb: >-
      Public MustInherit Class Singleton_Data(Of T As Singleton(Of T))
          Inherits Singleton(Of T)
          Implements Interface_Singleton_Data
  inheritance:
  - System.Object
  - Global.Singleton{{T}}
  derivedClasses:
  - Global.Singleton_EpisodeDataSimple
  - Global.Singleton_FanartDataSimple
  - Global.Singleton_InfoSerieSimple
  - Global.Singleton_NewsDataSimple
  - Global.Singleton_ShopDataSimple
  - Global.Singleton_TeamDataSimple
  - Global.Singleton_TimestampDataSimple
  implements:
  - Global.Interface_Singleton_Data
  inheritedMembers:
  - Global.Singleton{{T}}.Instance
  - Global.Singleton{{T}}.StartCoroutine(System.Collections.IEnumerator)
  - Global.Singleton{{T}}.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  - Global.Singleton{{T}}.Awake
  - Global.Singleton{{T}}.Start
  - Global.Singleton{{T}}.Update
  nameWithType.vb: Singleton_Data(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Singleton_Data(Of T)
  name.vb: Singleton_Data(Of T)
- uid: Global.Singleton_Data`1.listObject
  commentId: F:Global.Singleton_Data`1.listObject
  id: listObject
  parent: Global.Singleton_Data`1
  langs:
  - csharp
  - vb
  name: listObject
  nameWithType: Singleton_Data<T>.listObject
  fullName: Singleton_Data<T>.listObject
  type: Field
  source:
    id: listObject
    path: ''
    startLine: 17338
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected List<EditorObject> listObject
    return:
      type: System.Collections.Generic.List{EditorObject}
    content.vb: Protected listObject As List(Of EditorObject)
  nameWithType.vb: Singleton_Data(Of T).listObject
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Singleton_Data(Of T).listObject
- uid: Global.Singleton_Data`1.ListObject
  commentId: P:Global.Singleton_Data`1.ListObject
  id: ListObject
  parent: Global.Singleton_Data`1
  langs:
  - csharp
  - vb
  name: ListObject
  nameWithType: Singleton_Data<T>.ListObject
  fullName: Singleton_Data<T>.ListObject
  type: Property
  source:
    id: ListObject
    path: ''
    startLine: 17339
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public List<EditorObject> ListObject { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{EditorObject}
    content.vb: Public ReadOnly Property ListObject As List(Of EditorObject)
  overload: Global.Singleton_Data`1.ListObject*
  implements:
  - Global.Interface_Singleton_Data.ListObject
  nameWithType.vb: Singleton_Data(Of T).ListObject
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Singleton_Data(Of T).ListObject
- uid: Global.Singleton_Data`1.currentObject
  commentId: F:Global.Singleton_Data`1.currentObject
  id: currentObject
  parent: Global.Singleton_Data`1
  langs:
  - csharp
  - vb
  name: currentObject
  nameWithType: Singleton_Data<T>.currentObject
  fullName: Singleton_Data<T>.currentObject
  type: Field
  source:
    id: currentObject
    path: ''
    startLine: 17340
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected EditorObject currentObject
    return:
      type: Global.EditorObject
    content.vb: Protected currentObject As EditorObject
  nameWithType.vb: Singleton_Data(Of T).currentObject
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Singleton_Data(Of T).currentObject
- uid: Global.Singleton_Data`1.path
  commentId: F:Global.Singleton_Data`1.path
  id: path
  parent: Global.Singleton_Data`1
  langs:
  - csharp
  - vb
  name: path
  nameWithType: Singleton_Data<T>.path
  fullName: Singleton_Data<T>.path
  type: Field
  source:
    id: path
    path: ''
    startLine: 17344
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected string path
    return:
      type: System.String
    content.vb: Protected path As String
  nameWithType.vb: Singleton_Data(Of T).path
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Singleton_Data(Of T).path
- uid: Global.Singleton_Data`1.splitData
  commentId: F:Global.Singleton_Data`1.splitData
  id: splitData
  parent: Global.Singleton_Data`1
  langs:
  - csharp
  - vb
  name: splitData
  nameWithType: Singleton_Data<T>.splitData
  fullName: Singleton_Data<T>.splitData
  type: Field
  source:
    id: splitData
    path: ''
    startLine: 17345
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected char splitData
    return:
      type: System.Char
    content.vb: Protected splitData As Char
  nameWithType.vb: Singleton_Data(Of T).splitData
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Singleton_Data(Of T).splitData
- uid: Global.Singleton_Data`1.Path
  commentId: P:Global.Singleton_Data`1.Path
  id: Path
  parent: Global.Singleton_Data`1
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: Singleton_Data<T>.Path
  fullName: Singleton_Data<T>.Path
  type: Property
  source:
    id: Path
    path: ''
    startLine: 17347
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public string Path { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Path As String
  overload: Global.Singleton_Data`1.Path*
  nameWithType.vb: Singleton_Data(Of T).Path
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Singleton_Data(Of T).Path
- uid: Global.Singleton_Data`1.OnParsingComplete
  commentId: E:Global.Singleton_Data`1.OnParsingComplete
  id: OnParsingComplete
  parent: Global.Singleton_Data`1
  langs:
  - csharp
  - vb
  name: OnParsingComplete
  nameWithType: Singleton_Data<T>.OnParsingComplete
  fullName: Singleton_Data<T>.OnParsingComplete
  type: Event
  source:
    id: OnParsingComplete
    path: ''
    startLine: 17350
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public event Singleton_Data<T>.OnEvent OnParsingComplete
    return:
      type: Global.Singleton_Data`1.OnEvent
    content.vb: Public Event OnParsingComplete As Singleton_Data(Of T).OnEvent
  nameWithType.vb: Singleton_Data(Of T).OnParsingComplete
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Singleton_Data(Of T).OnParsingComplete
- uid: Global.Singleton_Data`1.Init
  commentId: M:Global.Singleton_Data`1.Init
  id: Init
  parent: Global.Singleton_Data`1
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: Singleton_Data<T>.Init()
  fullName: Singleton_Data<T>.Init()
  type: Method
  source:
    id: Init
    path: ''
    startLine: 17354
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected abstract void Init()
    content.vb: Protected MustOverride Sub Init
  overload: Global.Singleton_Data`1.Init*
  nameWithType.vb: Singleton_Data(Of T).Init()
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Singleton_Data(Of T).Init()
- uid: Global.Singleton_Data`1.SetValue(System.String,System.String)
  commentId: M:Global.Singleton_Data`1.SetValue(System.String,System.String)
  id: SetValue(System.String,System.String)
  parent: Global.Singleton_Data`1
  langs:
  - csharp
  - vb
  name: SetValue(String, String)
  nameWithType: Singleton_Data<T>.SetValue(String, String)
  fullName: Singleton_Data<T>.SetValue(System.String, System.String)
  type: Method
  source:
    id: SetValue
    path: ''
    startLine: 17365
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nThis function is call when the parse find a property, then send the property with the data\n"
  example: []
  syntax:
    content: public abstract void SetValue(string property, string data)
    parameters:
    - id: property
      type: System.String
      description: The property name of the Json
    - id: data
      type: System.String
      description: The data link to the property
    content.vb: Public MustOverride Sub SetValue(property As String, data As String)
  overload: Global.Singleton_Data`1.SetValue*
  implements:
  - Global.Interface_Singleton_Data.SetValue(System.String,System.String)
  nameWithType.vb: Singleton_Data(Of T).SetValue(String, String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Singleton_Data(Of T).SetValue(System.String, System.String)
- uid: Global.Singleton_Data`1.NewObject
  commentId: M:Global.Singleton_Data`1.NewObject
  id: NewObject
  parent: Global.Singleton_Data`1
  langs:
  - csharp
  - vb
  name: NewObject()
  nameWithType: Singleton_Data<T>.NewObject()
  fullName: Singleton_Data<T>.NewObject()
  type: Method
  source:
    id: NewObject
    path: ''
    startLine: 17367
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public abstract void NewObject()
    content.vb: Public MustOverride Sub NewObject
  overload: Global.Singleton_Data`1.NewObject*
  implements:
  - Global.Interface_Singleton_Data.NewObject
  nameWithType.vb: Singleton_Data(Of T).NewObject()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Singleton_Data(Of T).NewObject()
- uid: Global.Singleton_Data`1.ParsingComplete(Singleton_Data{`0})
  commentId: M:Global.Singleton_Data`1.ParsingComplete(Singleton_Data{`0})
  id: ParsingComplete(Singleton_Data{`0})
  parent: Global.Singleton_Data`1
  langs:
  - csharp
  - vb
  name: ParsingComplete(Singleton_Data<T>)
  nameWithType: Singleton_Data<T>.ParsingComplete(Singleton_Data<T>)
  fullName: Singleton_Data<T>.ParsingComplete(Singleton_Data<T>)
  type: Method
  source:
    id: ParsingComplete
    path: ''
    startLine: 17372
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nCall this event after the parsing is done. Need a function for the class children to call it\n"
  example: []
  syntax:
    content: public void ParsingComplete(Singleton_Data<T> data)
    parameters:
    - id: data
      type: Global.Singleton_Data`1
    content.vb: Public Sub ParsingComplete(data As Singleton_Data(Of T))
  overload: Global.Singleton_Data`1.ParsingComplete*
  nameWithType.vb: Singleton_Data(Of T).ParsingComplete(Singleton_Data(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Singleton_Data(Of T).ParsingComplete(Singleton_Data(Of T))
  name.vb: ParsingComplete(Singleton_Data(Of T))
- uid: Global.Singleton_Data`1.EnumeratorLoadImage
  commentId: M:Global.Singleton_Data`1.EnumeratorLoadImage
  id: EnumeratorLoadImage
  parent: Global.Singleton_Data`1
  langs:
  - csharp
  - vb
  name: EnumeratorLoadImage()
  nameWithType: Singleton_Data<T>.EnumeratorLoadImage()
  fullName: Singleton_Data<T>.EnumeratorLoadImage()
  type: Method
  source:
    id: EnumeratorLoadImage
    path: ''
    startLine: 17385
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nWhen the parsing is done, Load all images\n"
  example: []
  syntax:
    content: protected IEnumerator EnumeratorLoadImage()
    return:
      type: System.Collections.IEnumerator
    content.vb: Protected Function EnumeratorLoadImage As IEnumerator
  overload: Global.Singleton_Data`1.EnumeratorLoadImage*
  nameWithType.vb: Singleton_Data(Of T).EnumeratorLoadImage()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Singleton_Data(Of T).EnumeratorLoadImage()
- uid: Global.Singleton_Data`1.LoadImage
  commentId: M:Global.Singleton_Data`1.LoadImage
  id: LoadImage
  parent: Global.Singleton_Data`1
  langs:
  - csharp
  - vb
  name: LoadImage()
  nameWithType: Singleton_Data<T>.LoadImage()
  fullName: Singleton_Data<T>.LoadImage()
  type: Method
  source:
    id: LoadImage
    path: ''
    startLine: 17393
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected virtual void LoadImage()
    content.vb: Protected Overridable Sub LoadImage
  overload: Global.Singleton_Data`1.LoadImage*
  nameWithType.vb: Singleton_Data(Of T).LoadImage()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Singleton_Data(Of T).LoadImage()
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Global.Singleton{{T}}
  commentId: T:Global.Singleton{`0}
  definition: Global.Singleton`1
  name: Singleton<T>
  nameWithType: Singleton<T>
  fullName: Singleton<T>
  nameWithType.vb: Singleton(Of T)
  fullName.vb: Singleton(Of T)
  name.vb: Singleton(Of T)
  spec.csharp:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Interface_Singleton_Data
  commentId: T:Global.Interface_Singleton_Data
  name: Interface_Singleton_Data
  nameWithType: Interface_Singleton_Data
  fullName: Interface_Singleton_Data
- uid: Global.Singleton{{T}}.Instance
  commentId: P:Global.Singleton{`0}.Instance
  parent: Global.Singleton{{T}}
  definition: Global.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<T>.Instance
  fullName: Singleton<T>.Instance
  nameWithType.vb: Singleton(Of T).Instance
  fullName.vb: Singleton(Of T).Instance
- uid: Global.Singleton{{T}}.StartCoroutine(System.Collections.IEnumerator)
  commentId: M:Global.Singleton{`0}.StartCoroutine(System.Collections.IEnumerator)
  parent: Global.Singleton{{T}}
  definition: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  name: StartCoroutine(IEnumerator)
  nameWithType: Singleton<T>.StartCoroutine(IEnumerator)
  fullName: Singleton<T>.StartCoroutine(System.Collections.IEnumerator)
  nameWithType.vb: Singleton(Of T).StartCoroutine(IEnumerator)
  fullName.vb: Singleton(Of T).StartCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton<T>.StartCoroutine
    fullName: Singleton<T>.StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton(Of T).StartCoroutine
    fullName: Singleton(Of T).StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{{T}}.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Global.Singleton{`0}.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  parent: Global.Singleton{{T}}
  definition: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  name: AddCallbacks(Boolean, Boolean, Boolean)
  nameWithType: Singleton<T>.AddCallbacks(Boolean, Boolean, Boolean)
  fullName: Singleton<T>.AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  nameWithType.vb: Singleton(Of T).AddCallbacks(Boolean, Boolean, Boolean)
  fullName.vb: Singleton(Of T).AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton<T>.AddCallbacks
    fullName: Singleton<T>.AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton(Of T).AddCallbacks
    fullName: Singleton(Of T).AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{{T}}.Awake
  commentId: M:Global.Singleton{`0}.Awake
  parent: Global.Singleton{{T}}
  definition: Global.Singleton`1.Awake
  name: Awake()
  nameWithType: Singleton<T>.Awake()
  fullName: Singleton<T>.Awake()
  nameWithType.vb: Singleton(Of T).Awake()
  fullName.vb: Singleton(Of T).Awake()
  spec.csharp:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton<T>.Awake
    fullName: Singleton<T>.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton(Of T).Awake
    fullName: Singleton(Of T).Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{{T}}.Start
  commentId: M:Global.Singleton{`0}.Start
  parent: Global.Singleton{{T}}
  definition: Global.Singleton`1.Start
  name: Start()
  nameWithType: Singleton<T>.Start()
  fullName: Singleton<T>.Start()
  nameWithType.vb: Singleton(Of T).Start()
  fullName.vb: Singleton(Of T).Start()
  spec.csharp:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton<T>.Start
    fullName: Singleton<T>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton(Of T).Start
    fullName: Singleton(Of T).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{{T}}.Update
  commentId: M:Global.Singleton{`0}.Update
  parent: Global.Singleton{{T}}
  definition: Global.Singleton`1.Update
  name: Update()
  nameWithType: Singleton<T>.Update()
  fullName: Singleton<T>.Update()
  nameWithType.vb: Singleton(Of T).Update()
  fullName.vb: Singleton(Of T).Update()
  spec.csharp:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton<T>.Update
    fullName: Singleton<T>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton(Of T).Update
    fullName: Singleton(Of T).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Singleton`1
  commentId: T:Global.Singleton`1
  name: Singleton<T>
  nameWithType: Singleton<T>
  fullName: Singleton<T>
  nameWithType.vb: Singleton(Of T)
  fullName.vb: Singleton(Of T)
  name.vb: Singleton(Of T)
  spec.csharp:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Instance
  commentId: P:Global.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<T>.Instance
  fullName: Singleton<T>.Instance
  nameWithType.vb: Singleton(Of T).Instance
  fullName.vb: Singleton(Of T).Instance
- uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  commentId: M:Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  isExternal: true
  name: StartCoroutine(IEnumerator)
  nameWithType: Singleton<T>.StartCoroutine(IEnumerator)
  fullName: Singleton<T>.StartCoroutine(System.Collections.IEnumerator)
  nameWithType.vb: Singleton(Of T).StartCoroutine(IEnumerator)
  fullName.vb: Singleton(Of T).StartCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton<T>.StartCoroutine
    fullName: Singleton<T>.StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton(Of T).StartCoroutine
    fullName: Singleton(Of T).StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  isExternal: true
  name: AddCallbacks(Boolean, Boolean, Boolean)
  nameWithType: Singleton<T>.AddCallbacks(Boolean, Boolean, Boolean)
  fullName: Singleton<T>.AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  nameWithType.vb: Singleton(Of T).AddCallbacks(Boolean, Boolean, Boolean)
  fullName.vb: Singleton(Of T).AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton<T>.AddCallbacks
    fullName: Singleton<T>.AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton(Of T).AddCallbacks
    fullName: Singleton(Of T).AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Awake
  commentId: M:Global.Singleton`1.Awake
  name: Awake()
  nameWithType: Singleton<T>.Awake()
  fullName: Singleton<T>.Awake()
  nameWithType.vb: Singleton(Of T).Awake()
  fullName.vb: Singleton(Of T).Awake()
  spec.csharp:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton<T>.Awake
    fullName: Singleton<T>.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton(Of T).Awake
    fullName: Singleton(Of T).Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Start
  commentId: M:Global.Singleton`1.Start
  name: Start()
  nameWithType: Singleton<T>.Start()
  fullName: Singleton<T>.Start()
  nameWithType.vb: Singleton(Of T).Start()
  fullName.vb: Singleton(Of T).Start()
  spec.csharp:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton<T>.Start
    fullName: Singleton<T>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton(Of T).Start
    fullName: Singleton(Of T).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Update
  commentId: M:Global.Singleton`1.Update
  name: Update()
  nameWithType: Singleton<T>.Update()
  fullName: Singleton<T>.Update()
  nameWithType.vb: Singleton(Of T).Update()
  fullName.vb: Singleton(Of T).Update()
  spec.csharp:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton<T>.Update
    fullName: Singleton<T>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton(Of T).Update
    fullName: Singleton(Of T).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{EditorObject}
  commentId: T:System.Collections.Generic.List{EditorObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<EditorObject>
  nameWithType: List<EditorObject>
  fullName: System.Collections.Generic.List<EditorObject>
  nameWithType.vb: List(Of EditorObject)
  fullName.vb: System.Collections.Generic.List(Of EditorObject)
  name.vb: List(Of EditorObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.EditorObject
    name: EditorObject
    nameWithType: EditorObject
    fullName: EditorObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.EditorObject
    name: EditorObject
    nameWithType: EditorObject
    fullName: EditorObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Global.Singleton_Data`1.ListObject*
  commentId: Overload:Global.Singleton_Data`1.ListObject
  name: ListObject
  nameWithType: Singleton_Data<T>.ListObject
  fullName: Singleton_Data<T>.ListObject
  nameWithType.vb: Singleton_Data(Of T).ListObject
  fullName.vb: Singleton_Data(Of T).ListObject
- uid: Global.Interface_Singleton_Data.ListObject
  commentId: P:Global.Interface_Singleton_Data.ListObject
  parent: Global.Interface_Singleton_Data
  name: ListObject
  nameWithType: Interface_Singleton_Data.ListObject
  fullName: Interface_Singleton_Data.ListObject
- uid: Global.EditorObject
  commentId: T:Global.EditorObject
  name: EditorObject
  nameWithType: EditorObject
  fullName: EditorObject
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Global.Singleton_Data`1.Path*
  commentId: Overload:Global.Singleton_Data`1.Path
  name: Path
  nameWithType: Singleton_Data<T>.Path
  fullName: Singleton_Data<T>.Path
  nameWithType.vb: Singleton_Data(Of T).Path
  fullName.vb: Singleton_Data(Of T).Path
- uid: Global.Singleton_Data`1.OnEvent
  commentId: T:Global.Singleton_Data`1.OnEvent
  name: Singleton_Data.OnEvent<>
  nameWithType: Singleton_Data.OnEvent<>
  fullName: Singleton_Data.OnEvent<>
  nameWithType.vb: Singleton_Data.OnEvent(Of )
  fullName.vb: Singleton_Data.OnEvent(Of )
  name.vb: Singleton_Data.OnEvent(Of )
  spec.csharp:
  - uid: Global.Singleton_Data`1.OnEvent
    name: Singleton_Data.OnEvent
    nameWithType: Singleton_Data.OnEvent
    fullName: Singleton_Data.OnEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Singleton_Data`1.OnEvent
    name: Singleton_Data.OnEvent
    nameWithType: Singleton_Data.OnEvent
    fullName: Singleton_Data.OnEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton_Data`1.Init*
  commentId: Overload:Global.Singleton_Data`1.Init
  name: Init
  nameWithType: Singleton_Data<T>.Init
  fullName: Singleton_Data<T>.Init
  nameWithType.vb: Singleton_Data(Of T).Init
  fullName.vb: Singleton_Data(Of T).Init
- uid: Global.Singleton_Data`1.SetValue*
  commentId: Overload:Global.Singleton_Data`1.SetValue
  name: SetValue
  nameWithType: Singleton_Data<T>.SetValue
  fullName: Singleton_Data<T>.SetValue
  nameWithType.vb: Singleton_Data(Of T).SetValue
  fullName.vb: Singleton_Data(Of T).SetValue
- uid: Global.Interface_Singleton_Data.SetValue(System.String,System.String)
  commentId: M:Global.Interface_Singleton_Data.SetValue(System.String,System.String)
  parent: Global.Interface_Singleton_Data
  isExternal: true
  name: SetValue(String, String)
  nameWithType: Interface_Singleton_Data.SetValue(String, String)
  fullName: Interface_Singleton_Data.SetValue(System.String, System.String)
  spec.csharp:
  - uid: Global.Interface_Singleton_Data.SetValue(System.String,System.String)
    name: SetValue
    nameWithType: Interface_Singleton_Data.SetValue
    fullName: Interface_Singleton_Data.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Interface_Singleton_Data.SetValue(System.String,System.String)
    name: SetValue
    nameWithType: Interface_Singleton_Data.SetValue
    fullName: Interface_Singleton_Data.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton_Data`1.NewObject*
  commentId: Overload:Global.Singleton_Data`1.NewObject
  name: NewObject
  nameWithType: Singleton_Data<T>.NewObject
  fullName: Singleton_Data<T>.NewObject
  nameWithType.vb: Singleton_Data(Of T).NewObject
  fullName.vb: Singleton_Data(Of T).NewObject
- uid: Global.Interface_Singleton_Data.NewObject
  commentId: M:Global.Interface_Singleton_Data.NewObject
  parent: Global.Interface_Singleton_Data
  name: NewObject()
  nameWithType: Interface_Singleton_Data.NewObject()
  fullName: Interface_Singleton_Data.NewObject()
  spec.csharp:
  - uid: Global.Interface_Singleton_Data.NewObject
    name: NewObject
    nameWithType: Interface_Singleton_Data.NewObject
    fullName: Interface_Singleton_Data.NewObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Interface_Singleton_Data.NewObject
    name: NewObject
    nameWithType: Interface_Singleton_Data.NewObject
    fullName: Interface_Singleton_Data.NewObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton_Data`1.ParsingComplete*
  commentId: Overload:Global.Singleton_Data`1.ParsingComplete
  name: ParsingComplete
  nameWithType: Singleton_Data<T>.ParsingComplete
  fullName: Singleton_Data<T>.ParsingComplete
  nameWithType.vb: Singleton_Data(Of T).ParsingComplete
  fullName.vb: Singleton_Data(Of T).ParsingComplete
- uid: Global.Singleton_Data`1
  commentId: T:Global.Singleton_Data`1
  name: Singleton_Data<T>
  nameWithType: Singleton_Data<T>
  fullName: Singleton_Data<T>
  nameWithType.vb: Singleton_Data(Of T)
  fullName.vb: Singleton_Data(Of T)
  name.vb: Singleton_Data(Of T)
  spec.csharp:
  - uid: Global.Singleton_Data`1
    name: Singleton_Data
    nameWithType: Singleton_Data
    fullName: Singleton_Data
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Singleton_Data`1
    name: Singleton_Data
    nameWithType: Singleton_Data
    fullName: Singleton_Data
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton_Data`1.EnumeratorLoadImage*
  commentId: Overload:Global.Singleton_Data`1.EnumeratorLoadImage
  name: EnumeratorLoadImage
  nameWithType: Singleton_Data<T>.EnumeratorLoadImage
  fullName: Singleton_Data<T>.EnumeratorLoadImage
  nameWithType.vb: Singleton_Data(Of T).EnumeratorLoadImage
  fullName.vb: Singleton_Data(Of T).EnumeratorLoadImage
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Global.Singleton_Data`1.LoadImage*
  commentId: Overload:Global.Singleton_Data`1.LoadImage
  name: LoadImage
  nameWithType: Singleton_Data<T>.LoadImage
  fullName: Singleton_Data<T>.LoadImage
  nameWithType.vb: Singleton_Data(Of T).LoadImage
  fullName.vb: Singleton_Data(Of T).LoadImage
