### YamlMime:ManagedReference
items:
- uid: Global.Singleton`1
  commentId: T:Global.Singleton`1
  id: Singleton`1
  parent: Global
  children:
  - Global.Singleton`1.#ctor
  - Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  - Global.Singleton`1.Awake
  - Global.Singleton`1.Instance
  - Global.Singleton`1.Start
  - Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  - Global.Singleton`1.Update
  langs:
  - csharp
  - vb
  name: Singleton<T>
  nameWithType: Singleton<T>
  fullName: Singleton<T>
  type: Class
  source:
    id: Singleton
    path: ''
    startLine: 13363
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: >-
      public abstract class Singleton<T>
          where T : Singleton<T>
    typeParameters:
    - id: T
    content.vb: Public MustInherit Class Singleton(Of T As Singleton(Of T))
  inheritance:
  - System.Object
  derivedClasses:
  - Global.Singleton_CurrencyManager
  - Global.Singleton_Data`1
  - Global.Singleton_FTUEManager
  - Global.Singleton_ImagePooling
  - Global.Singleton_JsonManager
  - Global.Singleton_LanguageLoader
  - Global.Singleton_Manager
  - Global.Singleton_MemoryManager
  - Global.Singleton_MessagePooling
  - Global.Singleton_NewsData
  - Global.Singleton_ParsingData
  - Global.Singleton_ProfilPicManager
  - Global.Singleton_SeriePooling
  - Global.Singleton_SeriesTemplateHolder
  - Global.Singleton_ShopData
  - Global.Singleton_SpriteDownloader
  - Global.Singleton_SpriteUploader
  nameWithType.vb: Singleton(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Singleton(Of T)
  name.vb: Singleton(Of T)
- uid: Global.Singleton`1.#ctor
  commentId: M:Global.Singleton`1.#ctor
  id: '#ctor'
  parent: Global.Singleton`1
  langs:
  - csharp
  - vb
  name: Singleton()
  nameWithType: Singleton<T>.Singleton()
  fullName: Singleton<T>.Singleton()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 13365
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected Singleton()
    content.vb: Protected Sub New
  overload: Global.Singleton`1.#ctor*
  nameWithType.vb: Singleton(Of T).Singleton()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Singleton(Of T).Singleton()
- uid: Global.Singleton`1.Instance
  commentId: P:Global.Singleton`1.Instance
  id: Instance
  parent: Global.Singleton`1
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: Singleton<T>.Instance
  fullName: Singleton<T>.Instance
  type: Property
  source:
    id: Instance
    path: ''
    startLine: 13367
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public static T Instance { get; protected set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Shared Property Instance As T
  overload: Global.Singleton`1.Instance*
  nameWithType.vb: Singleton(Of T).Instance
  modifiers.csharp:
  - public
  - static
  - get
  - protected set
  modifiers.vb:
  - Public
  - Shared
  - Get
  - Protected Set
  fullName.vb: Singleton(Of T).Instance
- uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  commentId: M:Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  id: StartCoroutine(System.Collections.IEnumerator)
  parent: Global.Singleton`1
  langs:
  - csharp
  - vb
  name: StartCoroutine(IEnumerator)
  nameWithType: Singleton<T>.StartCoroutine(IEnumerator)
  fullName: Singleton<T>.StartCoroutine(System.Collections.IEnumerator)
  type: Method
  source:
    id: StartCoroutine
    path: ''
    startLine: 13369
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public Coroutine StartCoroutine(IEnumerator routine)
    parameters:
    - id: routine
      type: System.Collections.IEnumerator
    return:
      type: Global.Coroutine
    content.vb: Public Function StartCoroutine(routine As IEnumerator) As Coroutine
  overload: Global.Singleton`1.StartCoroutine*
  nameWithType.vb: Singleton(Of T).StartCoroutine(IEnumerator)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Singleton(Of T).StartCoroutine(System.Collections.IEnumerator)
- uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  id: AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  parent: Global.Singleton`1
  langs:
  - csharp
  - vb
  name: AddCallbacks(Boolean, Boolean, Boolean)
  nameWithType: Singleton<T>.AddCallbacks(Boolean, Boolean, Boolean)
  fullName: Singleton<T>.AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    id: AddCallbacks
    path: ''
    startLine: 13374
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected static void AddCallbacks(bool shouldAwake = false, bool shouldStart = false, bool shouldUpdate = false)
    parameters:
    - id: shouldAwake
      type: System.Boolean
    - id: shouldStart
      type: System.Boolean
    - id: shouldUpdate
      type: System.Boolean
    content.vb: Protected Shared Sub AddCallbacks(shouldAwake As Boolean = False, shouldStart As Boolean = False, shouldUpdate As Boolean = False)
  overload: Global.Singleton`1.AddCallbacks*
  nameWithType.vb: Singleton(Of T).AddCallbacks(Boolean, Boolean, Boolean)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Singleton(Of T).AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
- uid: Global.Singleton`1.Awake
  commentId: M:Global.Singleton`1.Awake
  id: Awake
  parent: Global.Singleton`1
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: Singleton<T>.Awake()
  fullName: Singleton<T>.Awake()
  type: Method
  source:
    id: Awake
    path: ''
    startLine: 13384
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected virtual void Awake()
    content.vb: Protected Overridable Sub Awake
  overload: Global.Singleton`1.Awake*
  nameWithType.vb: Singleton(Of T).Awake()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Singleton(Of T).Awake()
- uid: Global.Singleton`1.Start
  commentId: M:Global.Singleton`1.Start
  id: Start
  parent: Global.Singleton`1
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Singleton<T>.Start()
  fullName: Singleton<T>.Start()
  type: Method
  source:
    id: Start
    path: ''
    startLine: 13385
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected virtual void Start()
    content.vb: Protected Overridable Sub Start
  overload: Global.Singleton`1.Start*
  nameWithType.vb: Singleton(Of T).Start()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Singleton(Of T).Start()
- uid: Global.Singleton`1.Update
  commentId: M:Global.Singleton`1.Update
  id: Update
  parent: Global.Singleton`1
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Singleton<T>.Update()
  fullName: Singleton<T>.Update()
  type: Method
  source:
    id: Update
    path: ''
    startLine: 13386
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: protected virtual void Update()
    content.vb: Protected Overridable Sub Update
  overload: Global.Singleton`1.Update*
  nameWithType.vb: Singleton(Of T).Update()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Singleton(Of T).Update()
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Singleton`1.#ctor*
  commentId: Overload:Global.Singleton`1.#ctor
  name: Singleton
  nameWithType: Singleton<T>.Singleton
  fullName: Singleton<T>.Singleton
  nameWithType.vb: Singleton(Of T).Singleton
  fullName.vb: Singleton(Of T).Singleton
- uid: Global.Singleton`1.Instance*
  commentId: Overload:Global.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<T>.Instance
  fullName: Singleton<T>.Instance
  nameWithType.vb: Singleton(Of T).Instance
  fullName.vb: Singleton(Of T).Instance
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Global.Singleton`1.StartCoroutine*
  commentId: Overload:Global.Singleton`1.StartCoroutine
  name: StartCoroutine
  nameWithType: Singleton<T>.StartCoroutine
  fullName: Singleton<T>.StartCoroutine
  nameWithType.vb: Singleton(Of T).StartCoroutine
  fullName.vb: Singleton(Of T).StartCoroutine
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Global.Coroutine
  commentId: '!:Global.Coroutine'
  isExternal: true
  name: Coroutine
  nameWithType: Coroutine
  fullName: Coroutine
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Global.Singleton`1.AddCallbacks*
  commentId: Overload:Global.Singleton`1.AddCallbacks
  name: AddCallbacks
  nameWithType: Singleton<T>.AddCallbacks
  fullName: Singleton<T>.AddCallbacks
  nameWithType.vb: Singleton(Of T).AddCallbacks
  fullName.vb: Singleton(Of T).AddCallbacks
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Global.Singleton`1.Awake*
  commentId: Overload:Global.Singleton`1.Awake
  name: Awake
  nameWithType: Singleton<T>.Awake
  fullName: Singleton<T>.Awake
  nameWithType.vb: Singleton(Of T).Awake
  fullName.vb: Singleton(Of T).Awake
- uid: Global.Singleton`1.Start*
  commentId: Overload:Global.Singleton`1.Start
  name: Start
  nameWithType: Singleton<T>.Start
  fullName: Singleton<T>.Start
  nameWithType.vb: Singleton(Of T).Start
  fullName.vb: Singleton(Of T).Start
- uid: Global.Singleton`1.Update*
  commentId: Overload:Global.Singleton`1.Update
  name: Update
  nameWithType: Singleton<T>.Update
  fullName: Singleton<T>.Update
  nameWithType.vb: Singleton(Of T).Update
  fullName.vb: Singleton(Of T).Update
