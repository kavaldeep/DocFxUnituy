### YamlMime:ManagedReference
items:
- uid: Global.Singleton_SpriteDownloader
  commentId: T:Global.Singleton_SpriteDownloader
  id: Singleton_SpriteDownloader
  parent: Global
  children:
  - Global.Singleton_SpriteDownloader.DownloadImage(System.String,System.Boolean,Action{Texture2D})
  - Global.Singleton_SpriteDownloader.texture
  - Global.Singleton_SpriteDownloader.textures
  langs:
  - csharp
  - vb
  name: Singleton_SpriteDownloader
  nameWithType: Singleton_SpriteDownloader
  fullName: Singleton_SpriteDownloader
  type: Class
  source:
    id: Singleton_SpriteDownloader
    path: ''
    startLine: 12083
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: 'public class Singleton_SpriteDownloader : Singleton<Singleton_SpriteDownloader>'
    content.vb: >-
      Public Class Singleton_SpriteDownloader
          Inherits Singleton(Of Singleton_SpriteDownloader)
  inheritance:
  - System.Object
  - Global.Singleton{Singleton_SpriteDownloader}
  inheritedMembers:
  - Global.Singleton{Singleton_SpriteDownloader}.Instance
  - Global.Singleton{Singleton_SpriteDownloader}.StartCoroutine(System.Collections.IEnumerator)
  - Global.Singleton{Singleton_SpriteDownloader}.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  - Global.Singleton{Singleton_SpriteDownloader}.Awake
  - Global.Singleton{Singleton_SpriteDownloader}.Start
  - Global.Singleton{Singleton_SpriteDownloader}.Update
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.Singleton_SpriteDownloader.texture
  commentId: F:Global.Singleton_SpriteDownloader.texture
  id: texture
  parent: Global.Singleton_SpriteDownloader
  langs:
  - csharp
  - vb
  name: texture
  nameWithType: Singleton_SpriteDownloader.texture
  fullName: Singleton_SpriteDownloader.texture
  type: Field
  source:
    id: texture
    path: ''
    startLine: 12091
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public Texture2D texture
    return:
      type: Global.Texture2D
    content.vb: Public texture As Texture2D
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_SpriteDownloader.textures
  commentId: F:Global.Singleton_SpriteDownloader.textures
  id: textures
  parent: Global.Singleton_SpriteDownloader
  langs:
  - csharp
  - vb
  name: textures
  nameWithType: Singleton_SpriteDownloader.textures
  fullName: Singleton_SpriteDownloader.textures
  type: Field
  source:
    id: textures
    path: ''
    startLine: 12092
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public List<Texture2D> textures
    return:
      type: System.Collections.Generic.List{Texture2D}
    content.vb: Public textures As List(Of Texture2D)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Singleton_SpriteDownloader.DownloadImage(System.String,System.Boolean,Action{Texture2D})
  commentId: M:Global.Singleton_SpriteDownloader.DownloadImage(System.String,System.Boolean,Action{Texture2D})
  id: DownloadImage(System.String,System.Boolean,Action{Texture2D})
  parent: Global.Singleton_SpriteDownloader
  langs:
  - csharp
  - vb
  name: DownloadImage(String, Boolean, Action<Texture2D>)
  nameWithType: Singleton_SpriteDownloader.DownloadImage(String, Boolean, Action<Texture2D>)
  fullName: Singleton_SpriteDownloader.DownloadImage(System.String, System.Boolean, Action<Texture2D>)
  type: Method
  source:
    id: DownloadImage
    path: ''
    startLine: 12098
  assemblies:
  - cs.temp.dll
  namespace: Global
  summary: "\nThis method Downloads an Image from a given URL\n"
  example: []
  syntax:
    content: public static void DownloadImage(string _url, bool multipleTexts, Action<Texture2D> callback = null)
    parameters:
    - id: _url
      type: System.String
      description: 'The Image URL '
    - id: multipleTexts
      type: System.Boolean
    - id: callback
      type: Global.Action{Texture2D}
    content.vb: Public Shared Sub DownloadImage(_url As String, multipleTexts As Boolean, callback As Action(Of Texture2D) = Nothing)
  overload: Global.Singleton_SpriteDownloader.DownloadImage*
  nameWithType.vb: Singleton_SpriteDownloader.DownloadImage(String, Boolean, Action(Of Texture2D))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Singleton_SpriteDownloader.DownloadImage(System.String, System.Boolean, Action(Of Texture2D))
  name.vb: DownloadImage(String, Boolean, Action(Of Texture2D))
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Global.Singleton{Singleton_SpriteDownloader}
  commentId: T:Global.Singleton{Singleton_SpriteDownloader}
  definition: Global.Singleton`1
  name: Singleton<Singleton_SpriteDownloader>
  nameWithType: Singleton<Singleton_SpriteDownloader>
  fullName: Singleton<Singleton_SpriteDownloader>
  nameWithType.vb: Singleton(Of Singleton_SpriteDownloader)
  fullName.vb: Singleton(Of Singleton_SpriteDownloader)
  name.vb: Singleton(Of Singleton_SpriteDownloader)
  spec.csharp:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.Singleton_SpriteDownloader
    name: Singleton_SpriteDownloader
    nameWithType: Singleton_SpriteDownloader
    fullName: Singleton_SpriteDownloader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.Singleton_SpriteDownloader
    name: Singleton_SpriteDownloader
    nameWithType: Singleton_SpriteDownloader
    fullName: Singleton_SpriteDownloader
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_SpriteDownloader}.Instance
  commentId: P:Global.Singleton{Singleton_SpriteDownloader}.Instance
  parent: Global.Singleton{Singleton_SpriteDownloader}
  definition: Global.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<Singleton_SpriteDownloader>.Instance
  fullName: Singleton<Singleton_SpriteDownloader>.Instance
  nameWithType.vb: Singleton(Of Singleton_SpriteDownloader).Instance
  fullName.vb: Singleton(Of Singleton_SpriteDownloader).Instance
- uid: Global.Singleton{Singleton_SpriteDownloader}.StartCoroutine(System.Collections.IEnumerator)
  commentId: M:Global.Singleton{Singleton_SpriteDownloader}.StartCoroutine(System.Collections.IEnumerator)
  parent: Global.Singleton{Singleton_SpriteDownloader}
  definition: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  name: StartCoroutine(IEnumerator)
  nameWithType: Singleton<Singleton_SpriteDownloader>.StartCoroutine(IEnumerator)
  fullName: Singleton<Singleton_SpriteDownloader>.StartCoroutine(System.Collections.IEnumerator)
  nameWithType.vb: Singleton(Of Singleton_SpriteDownloader).StartCoroutine(IEnumerator)
  fullName.vb: Singleton(Of Singleton_SpriteDownloader).StartCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton<Singleton_SpriteDownloader>.StartCoroutine
    fullName: Singleton<Singleton_SpriteDownloader>.StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton(Of Singleton_SpriteDownloader).StartCoroutine
    fullName: Singleton(Of Singleton_SpriteDownloader).StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_SpriteDownloader}.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Global.Singleton{Singleton_SpriteDownloader}.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  parent: Global.Singleton{Singleton_SpriteDownloader}
  definition: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  name: AddCallbacks(Boolean, Boolean, Boolean)
  nameWithType: Singleton<Singleton_SpriteDownloader>.AddCallbacks(Boolean, Boolean, Boolean)
  fullName: Singleton<Singleton_SpriteDownloader>.AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  nameWithType.vb: Singleton(Of Singleton_SpriteDownloader).AddCallbacks(Boolean, Boolean, Boolean)
  fullName.vb: Singleton(Of Singleton_SpriteDownloader).AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton<Singleton_SpriteDownloader>.AddCallbacks
    fullName: Singleton<Singleton_SpriteDownloader>.AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton(Of Singleton_SpriteDownloader).AddCallbacks
    fullName: Singleton(Of Singleton_SpriteDownloader).AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_SpriteDownloader}.Awake
  commentId: M:Global.Singleton{Singleton_SpriteDownloader}.Awake
  parent: Global.Singleton{Singleton_SpriteDownloader}
  definition: Global.Singleton`1.Awake
  name: Awake()
  nameWithType: Singleton<Singleton_SpriteDownloader>.Awake()
  fullName: Singleton<Singleton_SpriteDownloader>.Awake()
  nameWithType.vb: Singleton(Of Singleton_SpriteDownloader).Awake()
  fullName.vb: Singleton(Of Singleton_SpriteDownloader).Awake()
  spec.csharp:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton<Singleton_SpriteDownloader>.Awake
    fullName: Singleton<Singleton_SpriteDownloader>.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton(Of Singleton_SpriteDownloader).Awake
    fullName: Singleton(Of Singleton_SpriteDownloader).Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_SpriteDownloader}.Start
  commentId: M:Global.Singleton{Singleton_SpriteDownloader}.Start
  parent: Global.Singleton{Singleton_SpriteDownloader}
  definition: Global.Singleton`1.Start
  name: Start()
  nameWithType: Singleton<Singleton_SpriteDownloader>.Start()
  fullName: Singleton<Singleton_SpriteDownloader>.Start()
  nameWithType.vb: Singleton(Of Singleton_SpriteDownloader).Start()
  fullName.vb: Singleton(Of Singleton_SpriteDownloader).Start()
  spec.csharp:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton<Singleton_SpriteDownloader>.Start
    fullName: Singleton<Singleton_SpriteDownloader>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton(Of Singleton_SpriteDownloader).Start
    fullName: Singleton(Of Singleton_SpriteDownloader).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton{Singleton_SpriteDownloader}.Update
  commentId: M:Global.Singleton{Singleton_SpriteDownloader}.Update
  parent: Global.Singleton{Singleton_SpriteDownloader}
  definition: Global.Singleton`1.Update
  name: Update()
  nameWithType: Singleton<Singleton_SpriteDownloader>.Update()
  fullName: Singleton<Singleton_SpriteDownloader>.Update()
  nameWithType.vb: Singleton(Of Singleton_SpriteDownloader).Update()
  fullName.vb: Singleton(Of Singleton_SpriteDownloader).Update()
  spec.csharp:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton<Singleton_SpriteDownloader>.Update
    fullName: Singleton<Singleton_SpriteDownloader>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton(Of Singleton_SpriteDownloader).Update
    fullName: Singleton(Of Singleton_SpriteDownloader).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Singleton`1
  commentId: T:Global.Singleton`1
  name: Singleton<T>
  nameWithType: Singleton<T>
  fullName: Singleton<T>
  nameWithType.vb: Singleton(Of T)
  fullName.vb: Singleton(Of T)
  name.vb: Singleton(Of T)
  spec.csharp:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Singleton`1
    name: Singleton
    nameWithType: Singleton
    fullName: Singleton
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Instance
  commentId: P:Global.Singleton`1.Instance
  name: Instance
  nameWithType: Singleton<T>.Instance
  fullName: Singleton<T>.Instance
  nameWithType.vb: Singleton(Of T).Instance
  fullName.vb: Singleton(Of T).Instance
- uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  commentId: M:Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
  isExternal: true
  name: StartCoroutine(IEnumerator)
  nameWithType: Singleton<T>.StartCoroutine(IEnumerator)
  fullName: Singleton<T>.StartCoroutine(System.Collections.IEnumerator)
  nameWithType.vb: Singleton(Of T).StartCoroutine(IEnumerator)
  fullName.vb: Singleton(Of T).StartCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton<T>.StartCoroutine
    fullName: Singleton<T>.StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: Singleton(Of T).StartCoroutine
    fullName: Singleton(Of T).StartCoroutine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
  isExternal: true
  name: AddCallbacks(Boolean, Boolean, Boolean)
  nameWithType: Singleton<T>.AddCallbacks(Boolean, Boolean, Boolean)
  fullName: Singleton<T>.AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  nameWithType.vb: Singleton(Of T).AddCallbacks(Boolean, Boolean, Boolean)
  fullName.vb: Singleton(Of T).AddCallbacks(System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton<T>.AddCallbacks
    fullName: Singleton<T>.AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.AddCallbacks(System.Boolean,System.Boolean,System.Boolean)
    name: AddCallbacks
    nameWithType: Singleton(Of T).AddCallbacks
    fullName: Singleton(Of T).AddCallbacks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Awake
  commentId: M:Global.Singleton`1.Awake
  name: Awake()
  nameWithType: Singleton<T>.Awake()
  fullName: Singleton<T>.Awake()
  nameWithType.vb: Singleton(Of T).Awake()
  fullName.vb: Singleton(Of T).Awake()
  spec.csharp:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton<T>.Awake
    fullName: Singleton<T>.Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Awake
    name: Awake
    nameWithType: Singleton(Of T).Awake
    fullName: Singleton(Of T).Awake
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Start
  commentId: M:Global.Singleton`1.Start
  name: Start()
  nameWithType: Singleton<T>.Start()
  fullName: Singleton<T>.Start()
  nameWithType.vb: Singleton(Of T).Start()
  fullName.vb: Singleton(Of T).Start()
  spec.csharp:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton<T>.Start
    fullName: Singleton<T>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Start
    name: Start
    nameWithType: Singleton(Of T).Start
    fullName: Singleton(Of T).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Singleton`1.Update
  commentId: M:Global.Singleton`1.Update
  name: Update()
  nameWithType: Singleton<T>.Update()
  fullName: Singleton<T>.Update()
  nameWithType.vb: Singleton(Of T).Update()
  fullName.vb: Singleton(Of T).Update()
  spec.csharp:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton<T>.Update
    fullName: Singleton<T>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Singleton`1.Update
    name: Update
    nameWithType: Singleton(Of T).Update
    fullName: Singleton(Of T).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Texture2D
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: Texture2D
- uid: System.Collections.Generic.List{Texture2D}
  commentId: T:System.Collections.Generic.List{Texture2D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Texture2D>
  nameWithType: List<Texture2D>
  fullName: System.Collections.Generic.List<Texture2D>
  nameWithType.vb: List(Of Texture2D)
  fullName.vb: System.Collections.Generic.List(Of Texture2D)
  name.vb: List(Of Texture2D)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: Texture2D
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: Texture2D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Global.Singleton_SpriteDownloader.DownloadImage*
  commentId: Overload:Global.Singleton_SpriteDownloader.DownloadImage
  name: DownloadImage
  nameWithType: Singleton_SpriteDownloader.DownloadImage
  fullName: Singleton_SpriteDownloader.DownloadImage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Global.Action{Texture2D}
  commentId: '!:Global.Action{Texture2D}'
  definition: Global.Action`1
  name: Action<Texture2D>
  nameWithType: Action<Texture2D>
  fullName: Action<Texture2D>
  nameWithType.vb: Action(Of Texture2D)
  fullName.vb: Action(Of Texture2D)
  name.vb: Action(Of Texture2D)
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: Texture2D
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: Texture2D
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.Action`1
  commentId: '!:Global.Action`1'
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
